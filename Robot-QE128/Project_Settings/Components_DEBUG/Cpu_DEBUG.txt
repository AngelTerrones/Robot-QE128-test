
{{DEVELOPMENT}} --------(((DEBUGINFO)))--------{{DEVELOPMENT}} 

 DRIVER SYMBOLS (alphabet order)
-------------------------------
Abstract=Common\ColdFireV1Abstract.inc
AfterResetPriority=1
AftreResetVal_tmp=0
ClockGeneratorType=ICS_V3
CommonISRForUnhandledInterrupts=
DefaultISRName=Cpu_Interrupt
DefaultRSTName=_startup
DefaultSPValue=(tIsrFunc)_SP_INIT
Description_Cpu_Interrupt=This ISR services an unused interrupt/exception vector.
Description_PE_low_level_init=Initializes components and provides common register initialization. The method is called automatically as a part of the application initialization code.
Description_Vaccerr=The method services the Access Error Exception vector.
Description_Vadderr=The method services the Address Error Exception vector.
Description_Vferror=The method services the RTE Format Error Exception vector.
Description_Viinstr=The method services the Illegal Instruction Exception vector.
Description_Vprviol=The method services the Privilege Violation Exception vector.
Description_Vtrap0=The method services the TRAP 0 Exception vector.
Description_Vtrap1=The method services the TRAP 1 Exception vector.
Description_Vtrap10=The method services the TRAP 10 Exception vector.
Description_Vtrap11=The method services the TRAP 11 Exception vector.
Description_Vtrap12=The method services the TRAP 12 Exception vector.
Description_Vtrap13=The method services the TRAP 13 Exception vector.
Description_Vtrap14=The method services the TRAP 14 Exception vector.
Description_Vtrap15=The method services the TRAP 15 Exception vector.
Description_Vtrap2=The method services the TRAP 2 Exception vector.
Description_Vtrap3=The method services the TRAP 3 Exception vector.
Description_Vtrap4=The method services the TRAP 4 Exception vector.
Description_Vtrap5=The method services the TRAP 5 Exception vector.
Description_Vtrap6=The method services the TRAP 6 Exception vector.
Description_Vtrap7=The method services the TRAP 7 Exception vector.
Description_Vtrap8=The method services the TRAP 8 Exception vector.
Description_Vtrap9=The method services the TRAP 9 Exception vector.
Description_Vunilaop=The method services the Unimplemented Line-A Opcode Exception vector.
Description_Vunilfop=The method services the Unimplemented Line-F Opcode Exception vector.
Description_Vunsinstr=The method services the Unsupported Instruction Exception vector.
Description___initialize_hardware=Configure the basic system functions (timing, etc.).
Doc_Misra_Rule_1=1.1
Doc_Misra_Rule_10=12.4
Doc_Misra_Rule_10_Description=The right-hand operand of a logical && or || operator shall not contain side effects.
Doc_Misra_Rule_10_Lint=Note 960: Violates MISRA 2004 Required Rule 12.4, side effects on right hand of logical operator
Doc_Misra_Rule_10_Reason=See detailed description for particular component
Doc_Misra_Rule_10_Type=Required
Doc_Misra_Rule_11=12.10
Doc_Misra_Rule_11_Description=The comma operator shall not be used.
Doc_Misra_Rule_11_Lint=Note 960: Violates MISRA 2004 Required Rule 12.10, comma operator used
Doc_Misra_Rule_11_Reason=Comma operator is used in macros for simple methods (optimization for code size). The rule is globally disabled only for 'Generate macros = yes'  option (Build Options)
Doc_Misra_Rule_11_Type=Required
Doc_Misra_Rule_12=14.2
Doc_Misra_Rule_12_Description=All non-null statements shall either: <br/>a) have at least one side effect however executed, <br/>or b) cause control flow to change.
Doc_Misra_Rule_12_Lint=Warning 522: Highest operation, function 'string', lacks side-effects [MISRA 2004 Rule 14.2]
Doc_Misra_Rule_12_Reason=PC-lint reports the warning for functions, which are wrappers for inline asm block (asm block is ignored by PC-lint).
Doc_Misra_Rule_12_Type=Required
Doc_Misra_Rule_13=14.3
Doc_Misra_Rule_13_Description=A null statement shall only occur on a line by itself
Doc_Misra_Rule_13_Lint=Note 960: Violates MISRA 2004 Required Rule 14.3, null statement not in line by itself
Doc_Misra_Rule_13_Reason=Several inline asm instructions are in one line separated by semicolon (asm() is ignored by PC-lint).
Doc_Misra_Rule_13_Type=Required
Doc_Misra_Rule_14=14.7
Doc_Misra_Rule_14_Description=A function shall have a single point of exit at the end of the function.
Doc_Misra_Rule_14_Lint=Note 904: Return statement before end of function [MISRA 2004 Rule 14.7]
Doc_Misra_Rule_14_Reason=Use of multiple return statements simplifies the code logic.
Doc_Misra_Rule_14_Type=Required
Doc_Misra_Rule_15=16.7
Doc_Misra_Rule_15_Description=A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object.
Doc_Misra_Rule_15_Lint=Info 818: Pointer parameter could be declared as pointing to const [MISRA 2004 Rule 16.7]
Doc_Misra_Rule_15_Reason=See reasons specified for each component
Doc_Misra_Rule_15_Type=Advisory
Doc_Misra_Rule_16=16.8
Doc_Misra_Rule_16_Description=All exit paths from a function with non-void return type shall have an explicit return statement with an expression.
Doc_Misra_Rule_16_Lint=Warning 533: function should return a value [MISRA 2004 Rule 16.8]
Doc_Misra_Rule_16_Reason=Function contains inline assembler instructions to get value of pin not associated with any port.
Doc_Misra_Rule_16_Type=Required
Doc_Misra_Rule_17=18.4
Doc_Misra_Rule_17_Description=Unions shall not be used.
Doc_Misra_Rule_17_Lint=Note 960: Violates MISRA 2004 Required Rule 18.4, unions shall not be used
Doc_Misra_Rule_17_Reason=Unions are used to efficiently swap bytes in a word or long word, to allow simple access to bit-field and to allow access to bits of registers for peripheral modules.
Doc_Misra_Rule_17_Type=Required
Doc_Misra_Rule_18=19.7
Doc_Misra_Rule_18_Description=A function should be used in preference to a function-like macro.
Doc_Misra_Rule_18_Lint=Note 961: Violates MISRA 2004 Advisory Rule 19.7, Function-like macro defined
Doc_Misra_Rule_18_Reason=Macros are used to optimize simple methods for code size. The rule is globally disabled for 'Generate macros' = yes option (Build Options).
Doc_Misra_Rule_18_Type=Advisory
Doc_Misra_Rule_19=19.12
Doc_Misra_Rule_19_Description=There shall be at most one occurrence of the # or ## preprocessor operators in a single macro definition.
Doc_Misra_Rule_19_Lint=Note 960: Violates MISRA 2004 Required Rule 19.12, Multiple use of '#/##' operators in macro definition
Doc_Misra_Rule_19_Reason=Multiple occurrences of preprocessor operators are used to convert bit name to bit mask in macros for accessing peripheral registers.
Doc_Misra_Rule_19_Type=Required
Doc_Misra_Rule_1_Description=All code shall conform to ISO 9899-1990 (C-code guideline)
Doc_Misra_Rule_1_Lint=Note 950: Non-ANSI reserved word or construct [MISRA 2004 Rules 1.1 and 2.2]
Doc_Misra_Rule_1_Reason=Non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt, CONVERT_TO_PAGED (RS08 only).
Doc_Misra_Rule_1_Type=Required
Doc_Misra_Rule_2=1.2
Doc_Misra_Rule_20=19.13
Doc_Misra_Rule_20_Description=The # and ## preprocessor operators should not be used.
Doc_Misra_Rule_20_Lint=Note 961: Violates MISRA 2004 Advisory Rule 19.13, '#/##' operator used
Doc_Misra_Rule_20_Reason=Preprocessor operators are used to convert bit name to bit mask in macros for accessing peripheral registers.
Doc_Misra_Rule_20_Type=Advisory
Doc_Misra_Rule_21=19.15
Doc_Misra_Rule_21_Description=Precautions shall be taken in order to prevent the contents of a header file being included twice.
Doc_Misra_Rule_21_Lint=Warning 537: Repeated include file 'PE_Types.h' [MISRA 2004 Rule 19.15]
Doc_Misra_Rule_21_Reason=All generated header files contain associated macro, which definition is tested. The headers file's content is included only if the macro is not defined.
Doc_Misra_Rule_21_Type=Required
Doc_Misra_Rule_2_Description=No reliance shall be placed on undefined or unspecified behavior
Doc_Misra_Rule_2_Lint=See lint message for specific component.
Doc_Misra_Rule_2_Reason=See specific reasons for each component.
Doc_Misra_Rule_2_Type=Required
Doc_Misra_Rule_3=2.4
Doc_Misra_Rule_3_Description=Sections of code should not be 'commented out'.
Doc_Misra_Rule_3_Lint=MISRA Compliancy Review (part of formal technical review)
Doc_Misra_Rule_3_Reason=Each init component contains 'Commented out' example of interrupt service routine (ISR), if generation of the ISR is enabled.
Doc_Misra_Rule_3_Type=Advisory
Doc_Misra_Rule_4=5.1
Doc_Misra_Rule_4_Description=Identifiers (internal and external) shall not rely on the significance of more than 31 characters.
Doc_Misra_Rule_4_Lint=Warning 621: Identifier clash [MISRA 2004 Rules 1.2, 1.4 and 5.1]
Doc_Misra_Rule_4_Reason=Length of register identifiers of peripheral modules are sometimes longer than 31 characters to comply with the Reference Manual.
Doc_Misra_Rule_4_Type=Required
Doc_Misra_Rule_5=6.4
Doc_Misra_Rule_5_Description=Bit-field shall only be defined to be of type unsigned int or signed int.
Doc_Misra_Rule_5_Lint=Error 46: field type should be int, unsigned int or signed int [MISRA 2004 Rule 6.4]
Doc_Misra_Rule_5_Reason=Unsigned char type is used in bit-fields as smallest possible type.
Doc_Misra_Rule_5_Type=Required
Doc_Misra_Rule_6=8.10
Doc_Misra_Rule_6_Description=All declarations and definitions of objects or function at file scope shall have internal linkage unless external linkage is required.
Doc_Misra_Rule_6_Lint=Info 765: external 'function' could be made static [MISRA 2004 Rule 8.10]
Doc_Misra_Rule_6_Reason=Device Initialization - ISR declaration is subject of various modifications by the user and may or may not be copied to another module - static is not used.
Doc_Misra_Rule_6_Type=Required
Doc_Misra_Rule_7=10.3
Doc_Misra_Rule_7_Description=The value of a complex expression of integer type may only be cast to a type that is narrower and of the same signedness as the underlying type of the expression.
Doc_Misra_Rule_7_Lint=Note 960: Violates MISRA 2004 Required Rule 10.3, Cast of complex expression changes signedness
Doc_Misra_Rule_7_Reason=For IRTC peripheral module, the value of a year in the register is represented by a signed value, but the interface of the component uses unsigned value. Typecast of na expression to unsigned value is used due to less code size.
Doc_Misra_Rule_7_Type=Required
Doc_Misra_Rule_8=11.3
Doc_Misra_Rule_8_Description=A cast should not be performed between a pointer type and an integral type.
Doc_Misra_Rule_8_Lint=Note 923: cast from 'integer type' to pointer [Encompasses MISRA 2004 Rules 11.1 and 11.3], [MISRA 2004 Rule 11.3]
Doc_Misra_Rule_8_Reason=See detailed description for particular component
Doc_Misra_Rule_8_Type=Advisory
Doc_Misra_Rule_9=11.4
Doc_Misra_Rule_9_Description=A cast should be not be performed between a pointer to object type and different pointer to object type
Doc_Misra_Rule_9_Lint=Note 929: cast from pointer to pointer [MISRA 2004 Rule 11.4]
Doc_Misra_Rule_9_Reason=See detailed description for particular component
Doc_Misra_Rule_9_Type=Required
DriverAuthor=Petr Cach
DriverDate=04.12.2006
DriverVersion=01.12
EndOfInterface=
ICGC1UsingInSpeedModes=0
ICS_V3_WatchDogState=
INIT_SEQ_CATEGORY_10_NAME=PE_low_level_init()  in the CPU module
INIT_SEQ_CATEGORY_1_NAME=Declarations for _EntryPoint()  in the CPU module
INIT_SEQ_CATEGORY_2_NAME=_EntryPoint()  in the CPU module
INIT_SEQ_CATEGORY_4_FIXED_NAME=C startup code
INIT_SEQ_CATEGORY_5_FIXED_NAME=main()
INIT_SEQ_ITEM_10_NAME_CommonEnabling=Common enabling of shared peripherals
INIT_SEQ_ITEM_10_NAME_CommonRegInit=Common register initialization
INIT_SEQ_ITEM_10_NAME_OnReset=Invocation of CPU OnReset event
INIT_SEQ_ITEM_10_NAME_SharedModules=Initialization of shared modules
INIT_SEQ_ITEM_2_NAME_CPUclock=CPU clock initialization
INIT_SEQ_ITEM_4_NAME_Cstartup=Initialization of stack, runtime libraries and memories
INIT_SEQ_ITEM_5_NAME_main=User code in the main module
InpStringCopy=e
IntVectNameStr=ivVL1swi     
IntVectTableBegin=0
IntVectorNameMaxLength=13
LVWF_reg=SPMSC3
MC9x08_COPreset=
MC9x08_WhileNotSet=
MC9x08_WhileNotValue=
MC9x08_WhileSet=
NameStr=Name         
OscillatorGainSetting=0
PE_CRI_W1_Comment_CPUINIT=
PMStatusControl1Reg=SPMSC1
PMStatusControl2Reg=SPMSC2
PartId_RegName=SDID
Permission=RWX
ResetStatus_RegName=SRS
SOPT1_BKGDPE_bit_position=1
SOPT1_COPE_bit_position=7
SOPT1_COPT_bit_position=6
SOPT1_RSTOPE_bit_position=2
SOPT1_RSTPE_bit_position=0
SOPT1_RegName=SOPT1
SOPT1_STOPE_bit_position=5
SOPT1_WAITE_bit_position=4
SOPT2_COPCLKS_bit_position=7
SOPT2_RegName=SOPT2
SPMSC1_BGBE_bit_position=0
SPMSC1_LVDE_bit_position=2
SPMSC1_LVDIE_bit_position=5
SPMSC1_LVDRE_bit_position=4
SPMSC1_LVDSE_bit_position=3
SPMSC1_RegName=SPMSC1
SPMSC2_LPR_bit_position=7
SPMSC2_LPWUI_bit_position=5
SPMSC2_PPDC_bit_position=0
SPMSC2_PPDE_bit_position=1
SPMSC2_RegName=SPMSC2
SPMSC3_LVDV_bit_position=5
SPMSC3_LVWIE_bit_position=3
SPMSC3_LVWV_bit_position=4
SPMSC3_RegName=SPMSC3
Settings=Common\ColdFireV1Settings.inc
VectorTableBegin=0
_MC9S08_DefineRegsAndBitsAccess_=
col=3
inc_num=1
ivVreset=_startup
loc_tmpChar=e
tmpBitMask=7
tmp_OutString=Generated_Code
while_not_set_loc_label=0
while_not_value_loc_label=0
while_set_loc_label=0
Doc_Misra_Rule_10_Location=[Cpu|AsynchroSerial|ADC|Cpu|AsynchroSerial|ADC]
Doc_Misra_Rule_10_Location_Reason=[In Device Initialization for RS08 derivatives that supports interrupt vector, in ISR dispatcher two status register are scanned in one while condition using || operator. Short evaluation of a condition is not important, because the ISR dispatcher scans the variables in the loop.|The code is accessing two volatile varibles in a condition. The order of access to variables is not important, because the variables are not mutualy dependent. Short evaluation of the condition is not importatnt in this case.|The code is accessing a register and a volatile varible in a condition. The order of access is not important, because the variable and register are not mutualy dependent. Short evaluation of the condition is not importatnt in this case.|In Device Initialization for RS08 derivatives that supports interrupt vector, in ISR dispatcher two status register are scanned in one while condition using || operator. Short evaluation of a condition is not important, because the ISR dispatcher scans the variables in the loop.|The code is accessing two volatile varibles in a condition. The order of access to variables is not important, because the variables are not mutualy dependent. Short evaluation of the condition is not importatnt in this case.|The code is accessing a register and a volatile varible in a condition. The order of access is not important, because the variable and register are not mutualy dependent. Short evaluation of the condition is not importatnt in this case.]
Doc_Misra_Rule_11_Location=[Global|WatchDog|Global|WatchDog]
Doc_Misra_Rule_11_Location_Reason=[Comma operator is used in macros for simple methods (optimization for code size). The rule is globally disabled for 'Generate macros = yes' option (Build Options)|Comma operator is used in 'Clear' macro (optimization for code size). The rule is disabled for 'Generate macros = no' option (Build Options)|Comma operator is used in macros for simple methods (optimization for code size). The rule is globally disabled for 'Generate macros = yes' option (Build Options)|Comma operator is used in 'Clear' macro (optimization for code size). The rule is disabled for 'Generate macros = no' option (Build Options)]
Doc_Misra_Rule_12_Location=[Cpu|SW_I2C|InternalI2C|Init_SAW|Cpu|SW_I2C|InternalI2C|Init_SAW]
Doc_Misra_Rule_12_Location_Reason=[PC-lint reports the warning for 'Delay100US' method, which is a wrapper for inline asm block (asm block is ignored by PC-lint);<br/>PC-lint may report the warning in Device Initialization for RS08 derivatives that supports interrupt vector. In interrupt service routine, empty sub-routines templates for each peripheral interrupt are called.|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).|PC-lint reports the warning for 'Delay100US' method, which is a wrapper for inline asm block (asm block is ignored by PC-lint);<br/>PC-lint may report the warning in Device Initialization for RS08 derivatives that supports interrupt vector. In interrupt service routine, empty sub-routines templates for each peripheral interrupt are called.|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).|PC-lint reports the warning for 'Delay' function, which is a wrapper for inline asm block (asm block is ignored by PC-lint).]
Doc_Misra_Rule_13_Location=[PE_Types.h|PE_Types.h]
Doc_Misra_Rule_14_Location=[Global|Global]
Doc_Misra_Rule_15_Location=[IntFlash|IntFlash]
Doc_Misra_Rule_15_Location_Reason=['Source' parameter of SetBlockFlash method can be declared as const but only in specific component's setting (Write method = Write or Safe write). User interface should be uniform for all settings of the component, that's why 'const' is not used.|'Source' parameter of SetBlockFlash method can be declared as const but only in specific component's setting (Write method = Write or Safe write). User interface should be uniform for all settings of the component, that's why 'const' is not used.]
Doc_Misra_Rule_16_Location=[ExtInt|ExtInt]
Doc_Misra_Rule_17_Location=[IO_Map.h|PE_Types.h|AsynchroSerial|AsynchroMaster|AsynchroSlave|FreescaleCAN|IntFLASH|PE_Timer|PPG|PWM|PWMMC|SynchroMaster|SynchroSlave|IO_Map.h|PE_Types.h|AsynchroSerial|AsynchroMaster|AsynchroSlave|FreescaleCAN|IntFLASH|PE_Timer|PPG|PWM|PWMMC|SynchroMaster|SynchroSlave]
Doc_Misra_Rule_18_Location=[Global|Cpu|IO_Map.h|PE_Types.h|LCD|ExtInt|IntFlash|WatchDog|PE_Timer|AsynchroMaster|Global|Cpu|IO_Map.h|PE_Types.h|LCD|ExtInt|IntFlash|WatchDog|PE_Timer|AsynchroMaster]
Doc_Misra_Rule_18_Location_Reason=[Macros are used to optimize simple methods for code size. The rule is globally disabled for 'Generate macros = yes' option (Build Options).|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following methods: GetPllLockStatusFlag, GetLowVoltageFlag, SetStopMode, SetWaitMode, DisableInt, EnableInt, GetSpeedMode|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: __RESET_WATCHDOG|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: All macros for register access, __DI, __EI, EnterCritical, ExitCritical, SaveStatusReg, RestoreStatusReg, PE_DEBUGHALT, ISR|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: SetPixel, GetPixel|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Enable, Disable,GetVal|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Busy, EnableEvent, DisableEvent|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Clear|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macros: LngHi5|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following methods: Standby, LoopMode, SetDirection, TurnRxOff, TurnRxOn, TurnTxOff, TurnTxOn, GetTxComplete|Macros are used to optimize simple methods for code size. The rule is globally disabled for 'Generate macros = yes' option (Build Options).|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following methods: GetPllLockStatusFlag, GetLowVoltageFlag, SetStopMode, SetWaitMode, DisableInt, EnableInt, GetSpeedMode|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: __RESET_WATCHDOG|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: All macros for register access, __DI, __EI, EnterCritical, ExitCritical, SaveStatusReg, RestoreStatusReg, PE_DEBUGHALT, ISR|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: SetPixel, GetPixel|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Enable, Disable,GetVal|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Busy, EnableEvent, DisableEvent|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macro: Clear|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following macros: LngHi5|Macros are used to optimize simple methods for code size. The rule is disabled for 'Generate macros = no' option (Build Options) for following methods: Standby, LoopMode, SetDirection, TurnRxOff, TurnRxOn, TurnTxOff, TurnTxOn, GetTxComplete]
Doc_Misra_Rule_19_Location=[PE_Types.h|PE_Types.h]
Doc_Misra_Rule_1_Location=[Global|PE_Types.h|IO_Map.h|Vectors.c|Cpu|IntFlash|IntEEPROM|SW_I2C|Init_SAW|InternalI2C|AsynchroSerial|BitIO|FreescaleAnalogComp|Init_IRTC|Init_PRACMP|ExtInt|Global|PE_Types.h|IO_Map.h|Vectors.c|Cpu|IntFlash|IntEEPROM|SW_I2C|Init_SAW|InternalI2C|AsynchroSerial|BitIO|FreescaleAnalogComp|Init_IRTC|Init_PRACMP|ExtInt]
Doc_Misra_Rule_1_Location_ExtInt=[|]
Doc_Misra_Rule_1_Location_Reason=[All components may contain one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|All components may contain one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.|The component contains one of non-ANSI C reserved word or construct used as specific language extensions: @, asm, __asm, near, __near, far, interrupt, __interrupt.]
Doc_Misra_Rule_20_Location=[PE_Types.h|PE_Types.h]
Doc_Misra_Rule_20_Location_Reason=[Used to convert bit name to bit mask in macros accessing registers.|Used to convert bit name to bit mask in macros accessing registers.]
Doc_Misra_Rule_21_Location=[Global|Global]
Doc_Misra_Rule_2_Location=[Cpu|ADC|PE_Cnvrt.c|MeasurementEngine|IntFlash|Byte2IO|Byte3IO|Byte4IO|IntEEPROM|Cpu|ADC|PE_Cnvrt.c|MeasurementEngine|IntFlash|Byte2IO|Byte3IO|Byte4IO|IntEEPROM]
Doc_Misra_Rule_2_Location_Lint=[Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]|Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Note 931: Both sides have side effects [MISRA 2004 Rule 1.2]|Info 740: Unusual pointer cast (incompatible indirect types) [MISRA 2004 Rule 1.2]]
Doc_Misra_Rule_2_Location_Reason=[When writing to FLASH memory in SetBackdoorKey method, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast of the routine is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>In the interrupt vector table in Device Initialization for ColdFire V1 derivatives, stack pointer is initialized by typecast of a pointer to the pointer to function.|PC-Lint reports for summing of the calibration registers values by Calibrate method. The variable in header file for access to each calibration register is declared as volatile, but the order of register access is not important for setting the gain registers, because the registers used for summing are not changed after the automatic calibration end.|PC-Lint reports for operations with status variables (EnChan, EnChanFlags, ChRun). The variables are declared as volatile, but the order of variables access is not important, because the variables are not mutualy dependent.|PC-Lint reports for summing of the calibration registers values by ADC_Calibrate method. The variable in header file for access to each calibration register is declared as volatile, but the order of register access is not important for setting the gain registers, because the registers used for summing are not changed after the automatic calibration end.|When writing to FLASH memory, the routine waiting for write operation completion is copied to RAM memory and run in the RAM memory. Pointer cast of the wait routine is used for copy of the routine to the RAM memory.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|When writing to FLASH memory, the routine waiting for write operation completion is copied to RAM memory and run in the RAM memory. Pointer cast of the wait routine is used for copy of the routine to the RAM memory.|When writing to FLASH memory in SetBackdoorKey method, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast of the routine is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>In the interrupt vector table in Device Initialization for ColdFire V1 derivatives, stack pointer is initialized by typecast of a pointer to the pointer to function.|PC-Lint reports for summing of the calibration registers values by Calibrate method. The variable in header file for access to each calibration register is declared as volatile, but the order of register access is not important for setting the gain registers, because the registers used for summing are not changed after the automatic calibration end.|PC-Lint reports for operations with status variables (EnChan, EnChanFlags, ChRun). The variables are declared as volatile, but the order of variables access is not important, because the variables are not mutualy dependent.|PC-Lint reports for summing of the calibration registers values by ADC_Calibrate method. The variable in header file for access to each calibration register is declared as volatile, but the order of register access is not important for setting the gain registers, because the registers used for summing are not changed after the automatic calibration end.|When writing to FLASH memory, the routine waiting for write operation completion is copied to RAM memory and run in the RAM memory. Pointer cast of the wait routine is used for copy of the routine to the RAM memory.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|PC-Lint reports for reading the input value by GetVal method from several ports. The variable in header file for access to each port register is declared as volatile, but the order of register access is not important (neglected) for IO access.|When writing to FLASH memory, the routine waiting for write operation completion is copied to RAM memory and run in the RAM memory. Pointer cast of the wait routine is used for copy of the routine to the RAM memory.]
Doc_Misra_Rule_3_Location=[Global|Global]
Doc_Misra_Rule_4_Location=[IO_Map.h|IO_Map.h]
Doc_Misra_Rule_5_Location=[IO_Map.h|AsynchroSerial|AsynchroMaster|AsynchroSlave|SynchroMaster|SynchroSlave|PWMMC|SPI2UART|IO_Map.h|AsynchroSerial|AsynchroMaster|AsynchroSlave|SynchroMaster|SynchroSlave|PWMMC|SPI2UART]
Doc_Misra_Rule_6_Location=[Cpu|Cpu]
Doc_Misra_Rule_7_Location=[RTC|RTC]
Doc_Misra_Rule_8_Location=[Cpu|IntFlash|Init_SAW|IntEEPROM|Cpu|IntFlash|Init_SAW|IntEEPROM]
Doc_Misra_Rule_8_Location_Reason=[Internal oscillator trim register is initialized by typecasting storage address of a trim value to the pointer;<br/> When Interrupt vector table is generated into RAM, pointers to ISR functions are initialized by typecast of an integral value to the function pointer type. Typecast from pointer to integral type is also used in SetIntVect method when checking parameter value;<br/>SetBackdoorKey method uses typecast from pointer to integral to pass parameter to high level inline assembly routine placed in RAM.<br/> In interrupt vector table in Device Initialization, unassigned ISR are initialized by typecast of an integral value to the function pointer type.|Driver writing to FLASH memory uses pointer type for accessing data in the memory and integer type for manipulation and storage of the address to memory. Conversion between both types is needed and performed by the typecast between integral type and pointer type.|SAW internal oscillator trim register is initialized by typecasting storage address of a trim value to the pointer.|Driver for D-Flash memory type writing to EEPROM memory uses pointer type for accessing data in the memory and integral type for manipulation and storage of the address to memory. Conversion between both types is needed and performed by the typecast between integral type and pointer type.|Internal oscillator trim register is initialized by typecasting storage address of a trim value to the pointer;<br/> When Interrupt vector table is generated into RAM, pointers to ISR functions are initialized by typecast of an integral value to the function pointer type. Typecast from pointer to integral type is also used in SetIntVect method when checking parameter value;<br/>SetBackdoorKey method uses typecast from pointer to integral to pass parameter to high level inline assembly routine placed in RAM.<br/> In interrupt vector table in Device Initialization, unassigned ISR are initialized by typecast of an integral value to the function pointer type.|Driver writing to FLASH memory uses pointer type for accessing data in the memory and integer type for manipulation and storage of the address to memory. Conversion between both types is needed and performed by the typecast between integral type and pointer type.|SAW internal oscillator trim register is initialized by typecasting storage address of a trim value to the pointer.|Driver for D-Flash memory type writing to EEPROM memory uses pointer type for accessing data in the memory and integral type for manipulation and storage of the address to memory. Conversion between both types is needed and performed by the typecast between integral type and pointer type.]
Doc_Misra_Rule_9_Location=[Cpu|Term|IntFlash|ADC|PE_Cnvrt.c|Capture|MeasurementEngine|IntEEPROM|PWMMC|Cpu|Term|IntFlash|ADC|PE_Cnvrt.c|Capture|MeasurementEngine|IntEEPROM|PWMMC]
Doc_Misra_Rule_9_Location_Reason=[When writing to FLASH memory in SetBackdoorKey method, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast of the routine is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>In the interrupt vector table in Device Initialization for ColdFire V1 derivatives, stack pointer is initialized by typecast of a pointer to the pointer to a function.|Conversion between pointer to char type and pointer to unsigned char type is used in ReadChar method to receive characters.|When writing to FLASH memory, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>When Virtual page is enabled, it's possible to write or read a byte, a word or a double word to or from Virtual page (GetBytePage, SetBytePage, GetWordPage, SetWordPage, GetLongPage and SetLongPage methods). Pointer cast of the Virtual Page array to the desired type is used in these methods.|To ensure the high byte of the 16.bit result register is read first, both bytes are read separately and joined using the typecast to pointer to a structure.|To ensure the high byte of the 16.bit result register is read first, both bytes are read separately and joined using the typecast to pointer to a structure.|Typecast between pointers is used in GetCaptureValue method in case, it is generated as a macro.|Typecast between pointers is used when an array of pointers is accessed, which contains register addresses.|The EEPROM peripheral module (D-Flash memory type) works with two data bytes (word) for write operation, but access to one byte is needed (GetByte, SetByte methods). Conversion between the pointer to byte and pointer to word is used and typecast for pointer arithmetic is used.|Typecast between pointers is used in SetRatio16 method for ratio calculation.|When writing to FLASH memory in SetBackdoorKey method, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast of the routine is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>In the interrupt vector table in Device Initialization for ColdFire V1 derivatives, stack pointer is initialized by typecast of a pointer to the pointer to a function.|Conversion between pointer to char type and pointer to unsigned char type is used in ReadChar method to receive characters.|When writing to FLASH memory, the routine performing the write operation is copied to RAM memory and run in the RAM memory. Pointer cast is used for copy of the routine to the RAM memory and for call of the routine in RAM.;<br/>When Virtual page is enabled, it's possible to write or read a byte, a word or a double word to or from Virtual page (GetBytePage, SetBytePage, GetWordPage, SetWordPage, GetLongPage and SetLongPage methods). Pointer cast of the Virtual Page array to the desired type is used in these methods.|To ensure the high byte of the 16.bit result register is read first, both bytes are read separately and joined using the typecast to pointer to a structure.|To ensure the high byte of the 16.bit result register is read first, both bytes are read separately and joined using the typecast to pointer to a structure.|Typecast between pointers is used in GetCaptureValue method in case, it is generated as a macro.|Typecast between pointers is used when an array of pointers is accessed, which contains register addresses.|The EEPROM peripheral module (D-Flash memory type) works with two data bytes (word) for write operation, but access to one byte is needed (GetByte, SetByte methods). Conversion between the pointer to byte and pointer to word is used and typecast for pointer arithmetic is used.|Typecast between pointers is used in SetRatio16 method for ratio calculation.]
ExpNames=[IntIllegalInstruction|IntUnimplementedLineA|IntUnimplementedLineF|IntPrivilegeViolation]
ExpSymbols=[ILLEGAL_INSTRUCTION|UNIMPL_LINEA|UNIMPL_LINEF|PRIVILEDGE_VIOL]
HCS08_all_IO_Ports=[A|B|C|D|E|F|G|H|I|J|K|L]
LVWF_reg_list=[SPMSC1|SPMSC2|SPMSC3]
PE_MisraErrorCodes=[923]
UnusedVectorIsrName=[Cpu_Interrupt]
VectorAddress=[0x00000000|0x00000004|0x00000008|0x0000000C|0x00000010|0x00000014|0x00000018|0x0000001C|0x00000020|0x00000024|0x00000028|0x0000002C|0x00000030|0x00000034|0x00000038|0x0000003C|0x00000040|0x00000044|0x00000048|0x0000004C|0x00000050|0x00000054|0x00000058|0x0000005C|0x00000060|0x00000064|0x00000068|0x0000006C|0x00000070|0x00000074|0x00000078|0x0000007C|0x00000080|0x00000084|0x00000088|0x0000008C|0x00000090|0x00000094|0x00000098|0x0000009C|0x000000A0|0x000000A4|0x000000A8|0x000000AC|0x000000B0|0x000000B4|0x000000B8|0x000000BC|0x000000C0|0x000000C4|0x000000C8|0x000000CC|0x000000D0|0x000000D4|0x000000D8|0x000000DC|0x000000E0|0x000000E4|0x000000E8|0x000000EC|0x000000F0|0x000000F4|0x000000F8|0x000000FC|0x00000100|0x00000104|0x00000108|0x0000010C|0x00000110|0x00000114|0x00000118|0x0000011C|0x00000120|0x00000124|0x00000128|0x0000012C|0x00000130|0x00000134|0x00000138|0x0000013C|0x00000140|0x00000144|0x00000148|0x0000014C|0x00000150|0x00000154|0x00000158|0x0000015C|0x00000160|0x00000164|0x00000168|0x0000016C|0x00000170|0x00000174|0x00000178|0x0000017C|0x00000180|0x00000184|0x00000188|0x0000018C|0x00000190|0x00000194|0x00000198]
VectorIsrName=[(tIsrFunc)_SP_INIT|_startup|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|OSSyscallISR|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|OSTimerTickISR|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Terminal_InterruptError|Terminal_InterruptRx|Terminal_InterruptTx|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt|Cpu_Interrupt]
VectorName=[ivINITSP|ivINITPC|ivVaccerr|ivVadderr|ivViinstr|ivVReserved5|ivVReserved6|ivVReserved7|ivVprviol|ivVtrace|ivVunilaop|ivVunilfop|ivVdbgi|ivVReserved13|ivVferror|ivVReserved15|ivVReserved16|ivVReserved17|ivVReserved18|ivVReserved19|ivVReserved20|ivVReserved21|ivVReserved22|ivVReserved23|ivVspuri|ivVReserved25|ivVReserved26|ivVReserved27|ivVReserved28|ivVReserved29|ivVReserved30|ivVReserved31|ivVtrap0|ivVtrap1|ivVtrap2|ivVtrap3|ivVtrap4|ivVtrap5|ivVtrap6|ivVtrap7|ivVtrap8|ivVtrap9|ivVtrap10|ivVtrap11|ivVtrap12|ivVtrap13|ivVtrap14|ivVtrap15|ivVReserved48|ivVReserved49|ivVReserved50|ivVReserved51|ivVReserved52|ivVReserved53|ivVReserved54|ivVReserved55|ivVReserved56|ivVReserved57|ivVReserved58|ivVReserved59|ivVReserved60|ivVunsinstr|ivVReserved62|ivVReserved63|ivVirq|ivVlvd|ivVtpm1ch0|ivVtpm1ch1|ivVtpm1ch2|ivVtpm1ovf|ivVtpm2ch0|ivVtpm2ch1|ivVtpm2ch2|ivVtpm2ovf|ivVspi2|ivVspi1|ivVsci1err|ivVsci1rx|ivVsci1tx|ivViicx|ivVkeyboard|ivVadc|ivVacmpx|ivVsci2err|ivVsci2rx|ivVsci2tx|ivVrtc|ivVtpm3ch0|ivVtpm3ch1|ivVtpm3ch2|ivVtpm3ch3|ivVtpm3ch4|ivVtpm3ch5|ivVtpm3ovf|ivVReserved94|ivVReserved95|ivVL7swi|ivVL6swi|ivVL5swi|ivVL4swi|ivVL3swi|ivVL2swi|ivVL1swi]
VectorNumber=[0x00|0x01|0x02|0x03|0x04|0x05|0x06|0x07|0x08|0x09|0x0A|0x0B|0x0C|0x0D|0x0E|0x0F|0x10|0x11|0x12|0x13|0x14|0x15|0x16|0x17|0x18|0x19|0x1A|0x1B|0x1C|0x1D|0x1E|0x1F|0x20|0x21|0x22|0x23|0x24|0x25|0x26|0x27|0x28|0x29|0x2A|0x2B|0x2C|0x2D|0x2E|0x2F|0x30|0x31|0x32|0x33|0x34|0x35|0x36|0x37|0x38|0x39|0x3A|0x3B|0x3C|0x3D|0x3E|0x3F|0x40|0x41|0x42|0x43|0x44|0x45|0x46|0x47|0x48|0x49|0x4A|0x4B|0x4C|0x4D|0x4E|0x4F|0x50|0x51|0x52|0x53|0x54|0x55|0x56|0x57|0x58|0x59|0x5A|0x5B|0x5C|0x5D|0x5E|0x5F|0x60|0x61|0x62|0x63|0x64|0x65|0x66]
VectorShared=[-|-|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no|no]
VectorUsed=[used|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|used|used|used|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused|unused]
revAuth=[PC|PC|PC|PC|PC|PC|PC|PC|PC|PC|PC|PC|PC]
revCmnt_0=[Fixed support of LVD module. Support of Backdoorkey added.|Support for LCF linker file format added.|Support of speed modes fixed.|Support of SetWaitMode and SetStopMode added.]
revCmnt_1=[Integration with CW modified to take into account RS08 linker.]
revCmnt_10=[SetbackdoorKey method modified for dual flash block derivatives.]
revCmnt_11=[Initialization of global variable causing Access Error exception fixed - .]
revCmnt_12=[readyCPU -> readyMask]
revCmnt_2=[Support added for JM128.]
revCmnt_3=[Support added for AC256A, AC256B.]
revCmnt_4=[Support added for CN128.]
revCmnt_5=[Support added for EM256, EM128.]
revCmnt_6=[EM256 - IRTC tamper detect interrupt disabled, when the module is not used.]
revCmnt_7=[The code has been rearranged to use MC9S08_LowLevelInit.prg]
revCmnt_8=[Suppport added for AG128.]
revCmnt_9=[Suppport added for MM256, MM128, JE256, JE128.]
revDate=[20.08.2010|14.04.2010|16.12.2009|02.11.2009|28.05.2009|06.02.2009|12.12.2008|07.11.2008|08.07.2008|13.02.2008|08.11.2007|15.06.2007|15.03.2007]
revLvl=[9|2|3|5|5|9|5|5|5|5|5|9|9]
revVer=[01.12|01.11|01.10|01.09|01.08|01.07|01.06|01.05|01.04|01.03|01.02|01.01|01.01]
revVrf=[RH|RH|RH|RH|RH|RH|RH|RH|RH|RH|RH|RH|RH]

 LOCAL SYMBOLS (alphabet order)
-------------------------------
ADCCondGrp=
AddrRelatedReset=Enabled
BDMPin=PTA4_ACMP1O_BKGD_MS
BDMPinBitMask=16
BDMPinBitNum=4
BDMPinEnable=yes
BDMPinPinName=PTA4_ACMP1O_BKGD_MS
BDMPinPinNumber=64
BDMPinPortAddr=4294934528
BDMPinPortCntrAddr=4294934529
BDMPinPortCntrReg=PTADD
BDMPinPortName=PTA
BDMPinPortPullAddr=4294940736
BDMPinPortPullReg=PTAPE
BDMPinPortReg=PTAD
BDMPinPortSpecPERIPHERAL_BASE_ADDRESSAddr=4294934528
BDMPinPortSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
BDMPinPortSpecSlewAddr=4294940737
BDMPinPortSpecSlewReg=PTASE
BDMPinPortSpecStrengthAddr=4294940738
BDMPinPortSpecStrengthReg=PTADS
BDMPinSharedByOther=no
BDMPinSignal=
BDMPinSupportsDirInp=no
BDMPinSupportsDirOut=yes
BDMPin_Name=PTA4_ACMP1O_BKGD_MS
BeanVersion=01.010
CFV1MethGrp=
CFv1LowPowerGrp=
CHG_BeanIsEnabled=yes
CPU=MCF51QE128CLH
CPUCR_BWD=Enabled
CPUCR_FSD=Enabled
CPUCR_IAE=Disabled
CPUCR_IME=Disabled
CPUDB_CW_MCU_ID=28672
CPUDB_CW_MCU_NAME=MCF51QE128
CPUDB_Flash_EraseSectorSize=1024
CPUDB_Flash_NumOfBlocks=1
CPUDB_LQFP64=-1
CPUDB_MCF51QE128=-1
CPUDB_PACKAGE=LQFP64
CPU_peripheral=CPU
CPU_peripheralICSC1=4294934584
CPU_peripheralICSC2=4294934585
CPU_peripheralICSSC=4294934587
CPU_peripheralICSTRM=4294934586
CPU_peripheralINTC_WCR=4294967259
CPU_peripheralName=CPU
CPU_peripheralSOPT1=4294940674
CPU_peripheralSPMSC1=4294940680
CPU_peripheralSPMSC2=4294940681
CPU_peripheralSPMSC3=4294940683
CPU_peripheralSharedByOther=no
CPU_peripheralSpecClkGate1Addr=4294940686
CPU_peripheralSpecClkGate1Reg=SCGC1
CPU_peripheralSpecClkGate2Addr=4294940687
CPU_peripheralSpecClkGate2Reg=SCGC2
CPU_peripheralSpecConfig2Addr=4294940675
CPU_peripheralSpecConfig2Reg=SOPT2
CPU_peripheralSpecFreescale_Flexis_idReg=QE
CPU_peripheralSpecNVKey0Addr=1024
CPU_peripheralSpecNVKey0Reg=NVBACKKEY0
CPU_peripheralSpecNVKey1Addr=1025
CPU_peripheralSpecNVKey1Reg=NVBACKKEY1
CPU_peripheralSpecNVKey2Addr=1026
CPU_peripheralSpecNVKey2Reg=NVBACKKEY2
CPU_peripheralSpecNVKey3Addr=1027
CPU_peripheralSpecNVKey3Reg=NVBACKKEY3
CPU_peripheralSpecNVKey4Addr=1028
CPU_peripheralSpecNVKey4Reg=NVBACKKEY4
CPU_peripheralSpecNVKey5Addr=1029
CPU_peripheralSpecNVKey5Reg=NVBACKKEY5
CPU_peripheralSpecNVKey6Addr=1030
CPU_peripheralSpecNVKey6Reg=NVBACKKEY6
CPU_peripheralSpecNVKey7Addr=1031
CPU_peripheralSpecNVKey7Reg=NVBACKKEY7
CPU_peripheralSpecNVOptionAddr=1039
CPU_peripheralSpecNVOptionReg=NVOPT
CPU_peripheralSpecNVProtectionAddr=1037
CPU_peripheralSpecNVProtectionReg=NVPROT
CPU_peripheralSpecPE_SPEC_FEATURE_ADCReg=PE_SPEC_FEATURE_ADC
CPU_peripheralSpecPE_SPEC_FEATURE_EXTCLKReg=PE_SPEC_FEATURE_EXTCLK
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_ACMP1Reg=PE_SPEC_FEATURE_HasDevice_ACMP1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_ACMP2Reg=PE_SPEC_FEATURE_HasDevice_ACMP2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_COPFreeReg=PE_SPEC_FEATURE_HasDevice_COPFree
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_COPReg=PE_SPEC_FEATURE_HasDevice_COP
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_CPUReg=PE_SPEC_FEATURE_HasDevice_CPU
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_IIC1Reg=PE_SPEC_FEATURE_HasDevice_IIC1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_IIC2Reg=PE_SPEC_FEATURE_HasDevice_IIC2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_IRQModuleReg=PE_SPEC_FEATURE_HasDevice_IRQModule
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_IntFLASHReg=PE_SPEC_FEATURE_HasDevice_IntFLASH
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_KBI1Reg=PE_SPEC_FEATURE_HasDevice_KBI1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_KBI2Reg=PE_SPEC_FEATURE_HasDevice_KBI2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_LVDReg=PE_SPEC_FEATURE_HasDevice_LVD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTAReg=PE_SPEC_FEATURE_HasDevice_PTA
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTBReg=PE_SPEC_FEATURE_HasDevice_PTB
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTCReg=PE_SPEC_FEATURE_HasDevice_PTC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTDReg=PE_SPEC_FEATURE_HasDevice_PTD
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTEReg=PE_SPEC_FEATURE_HasDevice_PTE
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTFReg=PE_SPEC_FEATURE_HasDevice_PTF
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTGReg=PE_SPEC_FEATURE_HasDevice_PTG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTHReg=PE_SPEC_FEATURE_HasDevice_PTH
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_PTJReg=PE_SPEC_FEATURE_HasDevice_PTJ
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RGPIOReg=PE_SPEC_FEATURE_HasDevice_RGPIO
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RTCReg=PE_SPEC_FEATURE_HasDevice_RTC
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_RTCmodReg=PE_SPEC_FEATURE_HasDevice_RTCmod
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SCI1Reg=PE_SPEC_FEATURE_HasDevice_SCI1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SCI2Reg=PE_SPEC_FEATURE_HasDevice_SCI2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SIMReg=PE_SPEC_FEATURE_HasDevice_SIM
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SPI1Reg=PE_SPEC_FEATURE_HasDevice_SPI1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_SPI2Reg=PE_SPEC_FEATURE_HasDevice_SPI2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM10PPGReg=PE_SPEC_FEATURE_HasDevice_TPM10PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM10Reg=PE_SPEC_FEATURE_HasDevice_TPM10
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM11PPGReg=PE_SPEC_FEATURE_HasDevice_TPM11PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM11Reg=PE_SPEC_FEATURE_HasDevice_TPM11
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM12PPGReg=PE_SPEC_FEATURE_HasDevice_TPM12PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM12Reg=PE_SPEC_FEATURE_HasDevice_TPM12
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM1PPReg=PE_SPEC_FEATURE_HasDevice_TPM1PP
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM1Reg=PE_SPEC_FEATURE_HasDevice_TPM1
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM1_PPGReg=PE_SPEC_FEATURE_HasDevice_TPM1_PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM1freeReg=PE_SPEC_FEATURE_HasDevice_TPM1free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM20PPGReg=PE_SPEC_FEATURE_HasDevice_TPM20PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM20Reg=PE_SPEC_FEATURE_HasDevice_TPM20
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM21PPGReg=PE_SPEC_FEATURE_HasDevice_TPM21PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM21Reg=PE_SPEC_FEATURE_HasDevice_TPM21
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM22PPGReg=PE_SPEC_FEATURE_HasDevice_TPM22PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM22Reg=PE_SPEC_FEATURE_HasDevice_TPM22
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM2PPReg=PE_SPEC_FEATURE_HasDevice_TPM2PP
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM2Reg=PE_SPEC_FEATURE_HasDevice_TPM2
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM2_PPGReg=PE_SPEC_FEATURE_HasDevice_TPM2_PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM2freeReg=PE_SPEC_FEATURE_HasDevice_TPM2free
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM30PPGReg=PE_SPEC_FEATURE_HasDevice_TPM30PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM30Reg=PE_SPEC_FEATURE_HasDevice_TPM30
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM31PPGReg=PE_SPEC_FEATURE_HasDevice_TPM31PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM31Reg=PE_SPEC_FEATURE_HasDevice_TPM31
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM32PPGReg=PE_SPEC_FEATURE_HasDevice_TPM32PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM32Reg=PE_SPEC_FEATURE_HasDevice_TPM32
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM33PPGReg=PE_SPEC_FEATURE_HasDevice_TPM33PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM33Reg=PE_SPEC_FEATURE_HasDevice_TPM33
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM34PPGReg=PE_SPEC_FEATURE_HasDevice_TPM34PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM34Reg=PE_SPEC_FEATURE_HasDevice_TPM34
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM35PPGReg=PE_SPEC_FEATURE_HasDevice_TPM35PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM35Reg=PE_SPEC_FEATURE_HasDevice_TPM35
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM3PPReg=PE_SPEC_FEATURE_HasDevice_TPM3PP
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM3Reg=PE_SPEC_FEATURE_HasDevice_TPM3
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM3_PPGReg=PE_SPEC_FEATURE_HasDevice_TPM3_PPG
CPU_peripheralSpecPE_SPEC_FEATURE_HasDevice_TPM3freeReg=PE_SPEC_FEATURE_HasDevice_TPM3free
CPU_peripheralSpecPE_SPEC_FEATURE_ICSV3_HIGHRANGEReg=PE_SPEC_FEATURE_ICSV3_HIGHRANGE
CPU_peripheralSpecPE_SPEC_FEATURE_ICSV3_LOWRANGEReg=PE_SPEC_FEATURE_ICSV3_LOWRANGE
CPU_peripheralSpecPE_SPEC_FEATURE_ICSV3_MIDRANGEReg=PE_SPEC_FEATURE_ICSV3_MIDRANGE
CPU_peripheralSpecPE_SPEC_FEATURE_LVDINT_LVWINTReg=PE_SPEC_FEATURE_LVDINT_LVWINT
CPU_peripheralSpecPE_SPEC_FEATURE_LVD_LEVEL_SELECTReg=PE_SPEC_FEATURE_LVD_LEVEL_SELECT
CPU_peripheralSpecPE_SPEC_FEATURE_TPM1Reg=PE_SPEC_FEATURE_TPM1
CPU_peripheralSpecPE_SPEC_FEATURE_TPM2Reg=PE_SPEC_FEATURE_TPM2
CPU_peripheralSpecPE_SPEC_FEATURE_TPM3Reg=PE_SPEC_FEATURE_TPM3
CPU_peripheralSpecPTASlewAddr=4294940737
CPU_peripheralSpecPTASlewReg=PTASE
CPU_peripheralSpecPTAStrengthAddr=4294940738
CPU_peripheralSpecPTAStrengthReg=PTADS
CPU_peripheralSpecPTBSlewAddr=4294940741
CPU_peripheralSpecPTBSlewReg=PTBSE
CPU_peripheralSpecPTBStrengthAddr=4294940742
CPU_peripheralSpecPTBStrengthReg=PTBDS
CPU_peripheralSpecPTCSlewAddr=4294940745
CPU_peripheralSpecPTCSlewReg=PTCSE
CPU_peripheralSpecPTCStrengthAddr=4294940746
CPU_peripheralSpecPTCStrengthReg=PTCDS
CPU_peripheralSpecPTDSlewAddr=4294940749
CPU_peripheralSpecPTDSlewReg=PTDSE
CPU_peripheralSpecPTDStrengthAddr=4294940750
CPU_peripheralSpecPTDStrengthReg=PTDDS
CPU_peripheralSpecPTESlewAddr=4294940753
CPU_peripheralSpecPTESlewReg=PTESE
CPU_peripheralSpecPTEStrengthAddr=4294940754
CPU_peripheralSpecPTEStrengthReg=PTEDS
CPU_peripheralSpecPTFSlewAddr=4294940757
CPU_peripheralSpecPTFSlewReg=PTFSE
CPU_peripheralSpecPTFStrengthAddr=4294940758
CPU_peripheralSpecPTFStrengthReg=PTFDS
CPU_peripheralSpecPTGSlewAddr=4294940761
CPU_peripheralSpecPTGSlewReg=PTGSE
CPU_peripheralSpecPTGStrengthAddr=4294940762
CPU_peripheralSpecPTGStrengthReg=PTGDS
CPU_peripheralSpecPTHSlewAddr=4294940765
CPU_peripheralSpecPTHSlewReg=PTHSE
CPU_peripheralSpecPTHStrengthAddr=4294940766
CPU_peripheralSpecPTHStrengthReg=PTHDS
CPU_peripheralSpecPTJSlewAddr=4294940769
CPU_peripheralSpecPTJSlewReg=PTJSE
CPU_peripheralSpecPTJStrengthAddr=4294940770
CPU_peripheralSpecPTJStrengthReg=PTJDS
CPU_peripheralSpecPartIDHAddr=4294940678
CPU_peripheralSpecPartIDHReg=SDIDH
CPU_peripheralSpecPartIDLAddr=4294940679
CPU_peripheralSpecPartIDLReg=SDIDL
CPU_peripheralSpecStatusAddr=4294940672
CPU_peripheralSpecStatusReg=SRS
CPU_peripheral_Name=CPU
CPUfamily=ColdFireV1
CPUmanualVersion=MCF51QE128RM, Rev. 3, 9/2007
CPUproducer=Freescale
CPUsubFamily=MCF51QE
CPUtype=MCF51QE128_64
CPUvariant=MCF51QE128CLH
CW_BUILD_TOOL=com_freescale_coldfire_toolchain
CW_PRJWIZ_MCU_NAME=MCF51QE128
C_AlraedyInitialized=yes
C_CompilerIdentificationLong=CodeWarrior ColdFireV1 C Compiler
C_GenerateLINKFILE=yes
C_HeapSize=32
C_RomRamAccsExecute0=yes
C_RomRamAccsExecute1=yes
C_RomRamAccsRead0=yes
C_RomRamAccsRead1=yes
C_RomRamAccsWrite0=no
C_RomRamAccsWrite1=yes
C_RomRamAddr0=1040
C_RomRamAddr0_Area=
C_RomRamAddr0_EEPROM=no
C_RomRamAddr0_External=no
C_RomRamAddr0_FLASH=yes
C_RomRamAddr0_Internal=yes
C_RomRamAddr0_RAM=no
C_RomRamAddr0_ROM=no
C_RomRamAddr1=8388608
C_RomRamAddr1_Area=
C_RomRamAddr1_EEPROM=no
C_RomRamAddr1_External=no
C_RomRamAddr1_FLASH=no
C_RomRamAddr1_Internal=yes
C_RomRamAddr1_RAM=yes
C_RomRamAddr1_ROM=no
C_RomRamArea0=
C_RomRamArea1=
C_RomRamListMaxItem=1
C_RomRamListNumItems=2
C_RomRamName0=code
C_RomRamName1=userram
C_RomRamPhysicalType0=FLASH
C_RomRamPhysicalType1=RAM
C_RomRamSize0=130032
C_RomRamSize1=8192
C_RomRamTag0=
C_RomRamTag1=
C_StackSize=512
ClkGateACMP=Enabled
ClkGateADC=Enabled
ClkGateFLS=Enabled
ClkGateIIC1=Enabled
ClkGateIIC2=Enabled
ClkGateIRQ=Enabled
ClkGateKBI=Enabled
ClkGateRTC=Enabled
ClkGateSCI1=Enabled
ClkGateSCI2=Enabled
ClkGateSPI1=Enabled
ClkGateSPI2=Enabled
ClkGateTPM1=Enabled
ClkGateTPM2=Enabled
ClkGateTPM3=Enabled
ColdFireV1EvntGrpMaxItem=0
ColdFireV1EvntGrpNumItems=1
CommonEventsGrpMaxItem=0
CommonEventsGrpNumItems=1
DefaultMemAreas=Click to set default >
DeviceName=Cpu
DeviceType=MCF51QE128_64
DisableInt=DisableInt
DisableInt_Hint=void Cpu_DisableInt(void);
DisableInt_HintHint=Disables maskable interrupts
DisableInt_HintHintLong=Disables maskable interrupts
DriveStrengthPTA0=High
DriveStrengthPTA1=High
DriveStrengthPTA2=High
DriveStrengthPTA3=High
DriveStrengthPTA4=High
DriveStrengthPTA6=High
DriveStrengthPTA7=High
DriveStrengthPTB0=High
DriveStrengthPTB1=High
DriveStrengthPTB2=High
DriveStrengthPTB3=High
DriveStrengthPTB4=High
DriveStrengthPTB5=High
DriveStrengthPTB6=High
DriveStrengthPTB7=High
DriveStrengthPTC0=High
DriveStrengthPTC1=High
DriveStrengthPTC2=High
DriveStrengthPTC3=High
DriveStrengthPTC4=High
DriveStrengthPTC5=High
DriveStrengthPTC6=High
DriveStrengthPTC7=High
DriveStrengthPTD0=High
DriveStrengthPTD1=High
DriveStrengthPTD2=High
DriveStrengthPTD3=High
DriveStrengthPTD4=High
DriveStrengthPTD5=High
DriveStrengthPTD6=High
DriveStrengthPTD7=High
DriveStrengthPTE0=High
DriveStrengthPTE1=High
DriveStrengthPTE2=High
DriveStrengthPTE3=High
DriveStrengthPTE4=High
DriveStrengthPTE5=High
DriveStrengthPTE6=High
DriveStrengthPTE7=High
DriveStrengthPTF0=High
DriveStrengthPTF1=High
DriveStrengthPTF2=High
DriveStrengthPTF3=High
DriveStrengthPTF4=High
DriveStrengthPTF5=High
DriveStrengthPTF6=High
DriveStrengthPTF7=High
DriveStrengthPTG0=High
DriveStrengthPTG1=High
DriveStrengthPTG2=High
DriveStrengthPTG3=High
DriveStrengthPTH0=High
DriveStrengthPTH1=High
DriveStrengthPTH6=High
DriveStrengthPTH7=High
EnableInt=EnableInt
EnableInt_Hint=void Cpu_EnableInt(void);
EnableInt_HintHint=Enables maskable interrupts
EnableInt_HintHintLong=Enables maskable interrupts
EntryPoint_UserCodeAfterLines=0
EntryPoint_UserCodeBeforeLines=0
EntryPoint_UserDeclLines=0
EventModule=Events
ExtClkEnaGrp=
FTRIMvalueAddress=1022
FTRIMvalueAddress_Area=
FTRIMvalueAddress_EEPROM=no
FTRIMvalueAddress_External=no
FTRIMvalueAddress_FLASH=no
FTRIMvalueAddress_Internal=yes
FTRIMvalueAddress_RAM=no
FTRIMvalueAddress_ROM=no
GenFlashRegs=
GenMacros=yes
HighBusClock=25.165824
HighCGMMode=FEI
HighDCOMode=0
HighFLLMode=0
HighFdcoout_MHz=50.331648
HighFixedClk=0.016384
HighFrclkdiv_MHz=0.032768
HighIREFSClkSel_user=0
HighSpeed=
HighSpeedClock=Internal Clock
IncludedIOsettingsGrpMaxItem=0
IncludedIOsettingsGrpNumItems=1
InitPriority=0
InitUnbondedIOPull=2
InitUnbondedIO_OutputValue=0
InitUnbondedIOpins=2
InitUnusedIOpins=0
Init_VBR_reg=no
InitializeTRIM=yes
InstrRelatedReset=Enabled
IntAccessErrorGrp=no
IntAddressErrorGrp=no
IntFormatErrorGrp=no
IntIllegalInstructionGrp=no
IntOsc=32.768
IntPrivilegeViolationGrp=no
IntRefClkForPeripherals=Enabled
IntSwiGrp0=no
IntSwiGrp1=no
IntSwiGrp2=no
IntSwiGrp3=no
IntSwiGrp4=no
IntSwiGrp5=no
IntSwiGrp6=no
IntTrapGrp0=no
IntTrapGrp1=no
IntTrapGrp10=no
IntTrapGrp11=no
IntTrapGrp12=no
IntTrapGrp13=no
IntTrapGrp14=no
IntTrapGrp15=no
IntTrapGrp2=no
IntTrapGrp3=no
IntTrapGrp4=no
IntTrapGrp5=no
IntTrapGrp6=no
IntTrapGrp7=no
IntTrapGrp8=no
IntTrapGrp9=no
IntUnimplementedLineAGrp=no
IntUnimplementedLineFGrp=no
IntUnsupportedInstrGrp=no
LVD=no
LVDEvntGrp=
LVDMthdGrp=
LVWEvntGrp=
LibrariesGrpMaxItem=-1
LibrariesGrpNumItems=0
MetrowerksCC_68HCS08_Directory=
ModuleName=Cpu
OnChipCODE=131072
OnChipEEPROM=0
OnChipFLASH=131072
OnChipOTP=0
OnChipRAM=8192
OnChipROM=0
PECW_RecentTargetName=MCF51QE128_Internal_Flash
PECW_Targetname=ColdFire Compiler
PE_SPEC_ALLOW_PIN_SHARING=4
PE_SPEC_MANUAL_VERSION=0
PE_SPEC_REGISTERSPRG=214
ProtectionGen=0
RS08Grp=
RS08Grp1=
RS08Grp2=
RSTOPinEnable=no
ResetPin=PTA5_IRQ_TPM1CLK_RESET
ResetPinBitMask=32
ResetPinBitNum=5
ResetPinEnable=yes
ResetPinPinName=PTA5_IRQ_TPM1CLK_RESET
ResetPinPinNumber=63
ResetPinPortAddr=4294934528
ResetPinPortCntrAddr=4294934529
ResetPinPortCntrReg=PTADD
ResetPinPortName=PTA
ResetPinPortPullAddr=4294940736
ResetPinPortPullReg=PTAPE
ResetPinPortReg=PTAD
ResetPinPortSpecPERIPHERAL_BASE_ADDRESSAddr=4294934528
ResetPinPortSpecPERIPHERAL_BASE_ADDRESSReg=PERIPHERAL_BASE_ADDRESS
ResetPinPortSpecSlewAddr=4294940737
ResetPinPortSpecSlewReg=PTASE
ResetPinPortSpecStrengthAddr=4294940738
ResetPinPortSpecStrengthReg=PTADS
ResetPinSharedByOther=no
ResetPinSignal=
ResetPinSpecClkGate2Addr=4294940687
ResetPinSpecClkGate2Reg=SCGC2
ResetPinSpecPE_SPEC_FEATURE_IRQ_EDGEReg=PE_SPEC_FEATURE_IRQ_EDGE
ResetPinSpecPE_SPEC_FEATURE_IRQ_PULLReg=PE_SPEC_FEATURE_IRQ_PULL
ResetPinSupportsDirInp=yes
ResetPinSupportsDirOut=no
ResetPin_Name=PTA5_IRQ_TPM1CLK_RESET
STOP=no
SWInterruptsGrpMaxItem=6
SWInterruptsGrpNumItems=7
Security=1
SharedADCMaxItem=0
SharedADCNumItems=1
SharedBDMMaxItem=0
SharedBDMNumItems=1
SharedCPUConfigGrpMaxItem=0
SharedCPUConfigGrpNumItems=1
SharedClockGatingGrpMaxItem=0
SharedClockGatingGrpNumItems=1
SharedCpuMethodsMaxItem=0
SharedCpuMethodsNumItems=1
SharedFLASHMaxItem=0
SharedFLASHNumItems=1
SharedInternalMappingGrpMaxItem=0
SharedInternalMappingGrpNumItems=1
SharedInternalPropertiesMaxItem=0
SharedInternalPropertiesNumItems=1
SharedLVDMaxItem=0
SharedLVDNumItems=1
SharedResetPin0MaxItem=0
SharedResetPin0NumItems=1
SharedResetPinMaxItem=0
SharedResetPinNumItems=1
SharedSpeedModeSettingsMaxItem=0
SharedSpeedModeSettingsNumItems=1
SharedTMPMaxItem=0
SharedTMPNumItems=1
Shared_CPUInterruptsMaxItem=0
Shared_CPUInterruptsNumItems=1
Shared_ClockSettingsMaxItem=0
Shared_ClockSettingsNumItems=1
ShrdUnbondedIOGrpMaxItem=0
ShrdUnbondedIOGrpNumItems=1
ShrdUnusedIOGrpMaxItem=0
ShrdUnusedIOGrpNumItems=1
SlewControlPTA0=no
SlewControlPTA1=no
SlewControlPTA2=no
SlewControlPTA3=no
SlewControlPTA4=no
SlewControlPTA6=no
SlewControlPTA7=no
SlewControlPTB0=no
SlewControlPTB1=no
SlewControlPTB2=no
SlewControlPTB3=no
SlewControlPTB4=no
SlewControlPTB5=no
SlewControlPTB6=no
SlewControlPTB7=no
SlewControlPTC0=no
SlewControlPTC1=no
SlewControlPTC2=no
SlewControlPTC3=no
SlewControlPTC4=no
SlewControlPTC5=no
SlewControlPTC6=no
SlewControlPTC7=no
SlewControlPTD0=no
SlewControlPTD1=no
SlewControlPTD2=no
SlewControlPTD3=no
SlewControlPTD4=no
SlewControlPTD5=no
SlewControlPTD6=no
SlewControlPTD7=no
SlewControlPTE0=no
SlewControlPTE1=no
SlewControlPTE2=no
SlewControlPTE3=no
SlewControlPTE4=no
SlewControlPTE5=no
SlewControlPTE6=no
SlewControlPTE7=no
SlewControlPTF0=no
SlewControlPTF1=no
SlewControlPTF2=no
SlewControlPTF3=no
SlewControlPTF4=no
SlewControlPTF5=no
SlewControlPTF6=no
SlewControlPTF7=no
SlewControlPTG0=no
SlewControlPTG1=no
SlewControlPTG2=no
SlewControlPTG3=no
SlewControlPTH0=no
SlewControlPTH1=no
SlewControlPTH6=no
SlewControlPTH7=no
SystemPathsGrpMaxItem=-1
SystemPathsGrpNumItems=0
TPM1Aligned=Edge
TPM1CondGroup=
TPM2Aligned=Edge
TPM2CondGroup=
TPM3Aligned=Edge
TPM3CondGroup=
TRIMvalueAddress=1023
TRIMvalueAddress_Area=
TRIMvalueAddress_EEPROM=no
TRIMvalueAddress_External=no
TRIMvalueAddress_FLASH=no
TRIMvalueAddress_Internal=yes
TRIMvalueAddress_RAM=no
TRIMvalueAddress_ROM=no
TrapExceptionsGrpMaxItem=15
TrapExceptionsGrpNumItems=16
UnhandledIntCodeLines=2
UnhandledVectorsBehavior=1
UserDirectoriesGrpMaxItem=-1
UserDirectoriesGrpNumItems=0
UserPathsGrpMaxItem=-1
UserPathsGrpNumItems=0
VectorTableAddress=0
VectorTableAddress_Area=
VectorTableAddress_EEPROM=no
VectorTableAddress_External=no
VectorTableAddress_FLASH=yes
VectorTableAddress_Internal=yes
VectorTableAddress_RAM=no
VectorTableAddress_ROM=no
VectorTableSize=1020
WakeUpCntrlGrp=no
WatchDogResetMethod=WriteAny
WatchDogServiceRegister=SRS
ivINITPC=defaultInt
ivINITPC_No=1
ivINITPC_RESET=
ivINITPC_UserCount=0
ivINITSP=defaultInt
ivINITSP_No=0
ivINITSP_UserCount=0
ivVL1swi=defaultInt
ivVL1swi_No=102
ivVL1swi_SWint=
ivVL1swi_UserCount=0
ivVL2swi=defaultInt
ivVL2swi_No=101
ivVL2swi_SWint=
ivVL2swi_UserCount=0
ivVL3swi=defaultInt
ivVL3swi_No=100
ivVL3swi_SWint=
ivVL3swi_UserCount=0
ivVL4swi=defaultInt
ivVL4swi_No=99
ivVL4swi_SWint=
ivVL4swi_UserCount=0
ivVL5swi=defaultInt
ivVL5swi_No=98
ivVL5swi_SWint=
ivVL5swi_UserCount=0
ivVL6swi=defaultInt
ivVL6swi_No=97
ivVL6swi_SWint=
ivVL6swi_UserCount=0
ivVL7swi=defaultInt
ivVL7swi_No=96
ivVL7swi_SWint=
ivVL7swi_UserCount=0
ivVReserved13=defaultInt
ivVReserved13_No=13
ivVReserved13_UserCount=0
ivVReserved15=defaultInt
ivVReserved15_No=15
ivVReserved15_UserCount=0
ivVReserved16=defaultInt
ivVReserved16_No=16
ivVReserved16_UserCount=0
ivVReserved17=defaultInt
ivVReserved17_No=17
ivVReserved17_UserCount=0
ivVReserved18=defaultInt
ivVReserved18_No=18
ivVReserved18_UserCount=0
ivVReserved19=defaultInt
ivVReserved19_No=19
ivVReserved19_UserCount=0
ivVReserved20=defaultInt
ivVReserved20_No=20
ivVReserved20_UserCount=0
ivVReserved21=defaultInt
ivVReserved21_No=21
ivVReserved21_UserCount=0
ivVReserved22=defaultInt
ivVReserved22_No=22
ivVReserved22_UserCount=0
ivVReserved23=defaultInt
ivVReserved23_No=23
ivVReserved23_UserCount=0
ivVReserved25=defaultInt
ivVReserved25_No=25
ivVReserved25_UserCount=0
ivVReserved26=defaultInt
ivVReserved26_No=26
ivVReserved26_UserCount=0
ivVReserved27=defaultInt
ivVReserved27_No=27
ivVReserved27_UserCount=0
ivVReserved28=defaultInt
ivVReserved28_No=28
ivVReserved28_UserCount=0
ivVReserved29=defaultInt
ivVReserved29_No=29
ivVReserved29_UserCount=0
ivVReserved30=defaultInt
ivVReserved30_No=30
ivVReserved30_UserCount=0
ivVReserved31=defaultInt
ivVReserved31_No=31
ivVReserved31_UserCount=0
ivVReserved48=defaultInt
ivVReserved48_No=48
ivVReserved48_UserCount=0
ivVReserved49=defaultInt
ivVReserved49_No=49
ivVReserved49_UserCount=0
ivVReserved5=defaultInt
ivVReserved50=defaultInt
ivVReserved50_No=50
ivVReserved50_UserCount=0
ivVReserved51=defaultInt
ivVReserved51_No=51
ivVReserved51_UserCount=0
ivVReserved52=defaultInt
ivVReserved52_No=52
ivVReserved52_UserCount=0
ivVReserved53=defaultInt
ivVReserved53_No=53
ivVReserved53_UserCount=0
ivVReserved54=defaultInt
ivVReserved54_No=54
ivVReserved54_UserCount=0
ivVReserved55=defaultInt
ivVReserved55_No=55
ivVReserved55_UserCount=0
ivVReserved56=defaultInt
ivVReserved56_No=56
ivVReserved56_UserCount=0
ivVReserved57=defaultInt
ivVReserved57_No=57
ivVReserved57_UserCount=0
ivVReserved58=defaultInt
ivVReserved58_No=58
ivVReserved58_UserCount=0
ivVReserved59=defaultInt
ivVReserved59_No=59
ivVReserved59_UserCount=0
ivVReserved5_No=5
ivVReserved5_UserCount=0
ivVReserved6=defaultInt
ivVReserved60=defaultInt
ivVReserved60_No=60
ivVReserved60_UserCount=0
ivVReserved62=defaultInt
ivVReserved62_No=62
ivVReserved62_UserCount=0
ivVReserved63=defaultInt
ivVReserved63_No=63
ivVReserved63_UserCount=0
ivVReserved6_No=6
ivVReserved6_UserCount=0
ivVReserved7=defaultInt
ivVReserved7_No=7
ivVReserved7_UserCount=0
ivVReserved94=defaultInt
ivVReserved94_No=94
ivVReserved94_UserCount=0
ivVReserved95=defaultInt
ivVReserved95_No=95
ivVReserved95_UserCount=0
ivVaccerr=defaultInt
ivVaccerr_No=2
ivVaccerr_UserCount=0
ivVacmpx=defaultInt
ivVacmpx_No=82
ivVacmpx_UserCount=0
ivVadc=defaultInt
ivVadc_No=81
ivVadc_UserCount=0
ivVadderr=defaultInt
ivVadderr_No=3
ivVadderr_UserCount=0
ivVdbgi=defaultInt
ivVdbgi_No=12
ivVdbgi_UserCount=0
ivVferror=defaultInt
ivVferror_No=14
ivVferror_UserCount=0
ivViicx=defaultInt
ivViicx_No=79
ivViicx_UserCount=0
ivViinstr=defaultInt
ivViinstr_No=4
ivViinstr_UserCount=0
ivVirq=defaultInt
ivVirq_No=64
ivVirq_UserCount=0
ivVkeyboard=defaultInt
ivVkeyboard_No=80
ivVkeyboard_UserCount=0
ivVlvd=defaultInt
ivVlvd_No=65
ivVlvd_UserCount=0
ivVprviol=defaultInt
ivVprviol_No=8
ivVprviol_UserCount=0
ivVrtc=defaultInt
ivVrtc_No=86
ivVrtc_UserCount=0
ivVsci1err=defaultInt
ivVsci1err_No=76
ivVsci1err_Priority=450
ivVsci1err_UserCount=0
ivVsci1rx=defaultInt
ivVsci1rx_No=77
ivVsci1rx_Priority=440
ivVsci1rx_UserCount=0
ivVsci1tx=defaultInt
ivVsci1tx_No=78
ivVsci1tx_Priority=430
ivVsci1tx_UserCount=0
ivVsci2err=defaultInt
ivVsci2err_No=83
ivVsci2err_UserCount=0
ivVsci2rx=defaultInt
ivVsci2rx_No=84
ivVsci2rx_UserCount=0
ivVsci2tx=defaultInt
ivVsci2tx_No=85
ivVsci2tx_UserCount=0
ivVspi1=defaultInt
ivVspi1_No=75
ivVspi1_UserCount=0
ivVspi2=defaultInt
ivVspi2_No=74
ivVspi2_UserCount=0
ivVspuri=defaultInt
ivVspuri_No=24
ivVspuri_UserCount=0
ivVtpm1ch0=defaultInt
ivVtpm1ch0_No=66
ivVtpm1ch0_Priority=650
ivVtpm1ch0_UserCount=0
ivVtpm1ch1=defaultInt
ivVtpm1ch1_No=67
ivVtpm1ch1_UserCount=0
ivVtpm1ch2=defaultInt
ivVtpm1ch2_No=68
ivVtpm1ch2_UserCount=0
ivVtpm1ovf=defaultInt
ivVtpm1ovf_No=69
ivVtpm1ovf_UserCount=0
ivVtpm2ch0=defaultInt
ivVtpm2ch0_No=70
ivVtpm2ch0_UserCount=0
ivVtpm2ch1=defaultInt
ivVtpm2ch1_No=71
ivVtpm2ch1_UserCount=0
ivVtpm2ch2=defaultInt
ivVtpm2ch2_No=72
ivVtpm2ch2_UserCount=0
ivVtpm2ovf=defaultInt
ivVtpm2ovf_No=73
ivVtpm2ovf_UserCount=0
ivVtpm3ch0=defaultInt
ivVtpm3ch0_No=87
ivVtpm3ch0_UserCount=0
ivVtpm3ch1=defaultInt
ivVtpm3ch1_No=88
ivVtpm3ch1_UserCount=0
ivVtpm3ch2=defaultInt
ivVtpm3ch2_No=89
ivVtpm3ch2_UserCount=0
ivVtpm3ch3=defaultInt
ivVtpm3ch3_No=90
ivVtpm3ch3_UserCount=0
ivVtpm3ch4=defaultInt
ivVtpm3ch4_No=91
ivVtpm3ch4_UserCount=0
ivVtpm3ch5=defaultInt
ivVtpm3ch5_No=92
ivVtpm3ch5_UserCount=0
ivVtpm3ovf=defaultInt
ivVtpm3ovf_No=93
ivVtpm3ovf_UserCount=0
ivVtrace=defaultInt
ivVtrace_No=9
ivVtrace_UserCount=0
ivVtrap0=defaultInt
ivVtrap0_No=32
ivVtrap0_UserCount=0
ivVtrap1=defaultInt
ivVtrap10=defaultInt
ivVtrap10_No=42
ivVtrap10_UserCount=0
ivVtrap11=defaultInt
ivVtrap11_No=43
ivVtrap11_UserCount=0
ivVtrap12=defaultInt
ivVtrap12_No=44
ivVtrap12_UserCount=0
ivVtrap13=defaultInt
ivVtrap13_No=45
ivVtrap13_UserCount=0
ivVtrap14=defaultInt
ivVtrap14_No=46
ivVtrap14_Priority=-1
ivVtrap14_UserCount=0
ivVtrap15=defaultInt
ivVtrap15_No=47
ivVtrap15_UserCount=0
ivVtrap1_No=33
ivVtrap1_UserCount=0
ivVtrap2=defaultInt
ivVtrap2_No=34
ivVtrap2_UserCount=0
ivVtrap3=defaultInt
ivVtrap3_No=35
ivVtrap3_UserCount=0
ivVtrap4=defaultInt
ivVtrap4_No=36
ivVtrap4_UserCount=0
ivVtrap5=defaultInt
ivVtrap5_No=37
ivVtrap5_UserCount=0
ivVtrap6=defaultInt
ivVtrap6_No=38
ivVtrap6_UserCount=0
ivVtrap7=defaultInt
ivVtrap7_No=39
ivVtrap7_UserCount=0
ivVtrap8=defaultInt
ivVtrap8_No=40
ivVtrap8_UserCount=0
ivVtrap9=defaultInt
ivVtrap9_No=41
ivVtrap9_UserCount=0
ivVunilaop=defaultInt
ivVunilaop_No=10
ivVunilaop_UserCount=0
ivVunilfop=defaultInt
ivVunilfop_No=11
ivVunilfop_UserCount=0
ivVunsinstr=defaultInt
ivVunsinstr_No=61
ivVunsinstr_UserCount=0
runHighSpeed=yes
runLowSpeed=no
runSlowSpeed=no
runSpeedModeNum=1
EntryPoint_UserCodeAfter=[]
EntryPoint_UserCodeAfterLen=[]
EntryPoint_UserCodeBefore=[]
EntryPoint_UserCodeBeforeLen=[]
EntryPoint_UserDecl=[]
EntryPoint_UserDeclLen=[]
InterruptVectorAddrs=[0|4|8|12|16|20|24|28|32|36|40|44|48|52|56|60|64|68|72|76|80|84|88|92|96|100|104|108|112|116|120|124|128|132|136|140|144|148|152|156|160|164|168|172|176|180|184|188|192|196|200|204|208|212|216|220|224|228|232|236|240|244|248|252|256|260|264|268|272|276|280|284|288|292|296|300|304|308|312|316|320|324|328|332|336|340|344|348|352|356|360|364|368|372|376|380|384|388|392|396|400|404|408]
InterruptVectors=[ivINITSP|ivINITPC|ivVaccerr|ivVadderr|ivViinstr|ivVReserved5|ivVReserved6|ivVReserved7|ivVprviol|ivVtrace|ivVunilaop|ivVunilfop|ivVdbgi|ivVReserved13|ivVferror|ivVReserved15|ivVReserved16|ivVReserved17|ivVReserved18|ivVReserved19|ivVReserved20|ivVReserved21|ivVReserved22|ivVReserved23|ivVspuri|ivVReserved25|ivVReserved26|ivVReserved27|ivVReserved28|ivVReserved29|ivVReserved30|ivVReserved31|ivVtrap0|ivVtrap1|ivVtrap2|ivVtrap3|ivVtrap4|ivVtrap5|ivVtrap6|ivVtrap7|ivVtrap8|ivVtrap9|ivVtrap10|ivVtrap11|ivVtrap12|ivVtrap13|ivVtrap14|ivVtrap15|ivVReserved48|ivVReserved49|ivVReserved50|ivVReserved51|ivVReserved52|ivVReserved53|ivVReserved54|ivVReserved55|ivVReserved56|ivVReserved57|ivVReserved58|ivVReserved59|ivVReserved60|ivVunsinstr|ivVReserved62|ivVReserved63|ivVirq|ivVlvd|ivVtpm1ch0|ivVtpm1ch1|ivVtpm1ch2|ivVtpm1ovf|ivVtpm2ch0|ivVtpm2ch1|ivVtpm2ch2|ivVtpm2ovf|ivVspi2|ivVspi1|ivVsci1err|ivVsci1rx|ivVsci1tx|ivViicx|ivVkeyboard|ivVadc|ivVacmpx|ivVsci2err|ivVsci2rx|ivVsci2tx|ivVrtc|ivVtpm3ch0|ivVtpm3ch1|ivVtpm3ch2|ivVtpm3ch3|ivVtpm3ch4|ivVtpm3ch5|ivVtpm3ovf|ivVReserved94|ivVReserved95|ivVL7swi|ivVL6swi|ivVL5swi|ivVL4swi|ivVL3swi|ivVL2swi|ivVL1swi]
MethodHintList=[void Cpu_EnableInt(void);|void Cpu_DisableInt(void);]
MethodList=[EnableInt|DisableInt]
SharedEventHandlers=[]
UnhandledIntCode=[/* This code can be changed using the CPU component property "Build Options / Unhandled int code" */|/* asm (HALT) */]
UnhandledIntCodeLen=[100|16]
WriteOnce_RegisterList8=[SOPT1|SOPT2]
runSpeedMode=[Yes|No|No]

 DEPRECATED LOCAL SYMBOLS (alphabet order)
------------------------------------------
BDMPinPortSpec0Addr=4294934528
BDMPinPortSpec0Reg=PERIPHERAL_BASE_ADDRESS
BDMPinPortSpec1Addr=4294940737
BDMPinPortSpec1Reg=PTASE
BDMPinPortSpec2Addr=4294940738
BDMPinPortSpec2Reg=PTADS
CPU_peripheralSpec0Addr=1024
CPU_peripheralSpec0Reg=NVBACKKEY0
CPU_peripheralSpec100Reg=PE_SPEC_FEATURE_HasDevice_TPM35PPG
CPU_peripheralSpec101Reg=PE_SPEC_FEATURE_HasDevice_TPM3
CPU_peripheralSpec102Reg=PE_SPEC_FEATURE_HasDevice_TPM3_PPG
CPU_peripheralSpec103Addr=4294940672
CPU_peripheralSpec103Reg=SRS
CPU_peripheralSpec104Addr=4294940675
CPU_peripheralSpec104Reg=SOPT2
CPU_peripheralSpec105Addr=4294940678
CPU_peripheralSpec105Reg=SDIDH
CPU_peripheralSpec106Addr=4294940679
CPU_peripheralSpec106Reg=SDIDL
CPU_peripheralSpec107Addr=4294940686
CPU_peripheralSpec107Reg=SCGC1
CPU_peripheralSpec108Addr=4294940687
CPU_peripheralSpec108Reg=SCGC2
CPU_peripheralSpec109Reg=PE_SPEC_FEATURE_LVDINT_LVWINT
CPU_peripheralSpec10Addr=4294940737
CPU_peripheralSpec10Reg=PTASE
CPU_peripheralSpec110Reg=PE_SPEC_FEATURE_LVD_LEVEL_SELECT
CPU_peripheralSpec11Addr=4294940738
CPU_peripheralSpec11Reg=PTADS
CPU_peripheralSpec12Addr=4294940741
CPU_peripheralSpec12Reg=PTBSE
CPU_peripheralSpec13Addr=4294940742
CPU_peripheralSpec13Reg=PTBDS
CPU_peripheralSpec14Addr=4294940745
CPU_peripheralSpec14Reg=PTCSE
CPU_peripheralSpec15Addr=4294940746
CPU_peripheralSpec15Reg=PTCDS
CPU_peripheralSpec16Addr=4294940749
CPU_peripheralSpec16Reg=PTDSE
CPU_peripheralSpec17Addr=4294940750
CPU_peripheralSpec17Reg=PTDDS
CPU_peripheralSpec18Addr=4294940753
CPU_peripheralSpec18Reg=PTESE
CPU_peripheralSpec19Addr=4294940754
CPU_peripheralSpec19Reg=PTEDS
CPU_peripheralSpec1Addr=1025
CPU_peripheralSpec1Reg=NVBACKKEY1
CPU_peripheralSpec20Addr=4294940757
CPU_peripheralSpec20Reg=PTFSE
CPU_peripheralSpec21Addr=4294940758
CPU_peripheralSpec21Reg=PTFDS
CPU_peripheralSpec22Addr=4294940761
CPU_peripheralSpec22Reg=PTGSE
CPU_peripheralSpec23Addr=4294940762
CPU_peripheralSpec23Reg=PTGDS
CPU_peripheralSpec24Addr=4294940765
CPU_peripheralSpec24Reg=PTHSE
CPU_peripheralSpec25Addr=4294940766
CPU_peripheralSpec25Reg=PTHDS
CPU_peripheralSpec26Addr=4294940769
CPU_peripheralSpec26Reg=PTJSE
CPU_peripheralSpec27Addr=4294940770
CPU_peripheralSpec27Reg=PTJDS
CPU_peripheralSpec28Reg=PE_SPEC_FEATURE_ADC
CPU_peripheralSpec29Reg=QE
CPU_peripheralSpec2Addr=1026
CPU_peripheralSpec2Reg=NVBACKKEY2
CPU_peripheralSpec31Reg=PE_SPEC_FEATURE_ICSV3_LOWRANGE
CPU_peripheralSpec32Reg=PE_SPEC_FEATURE_ICSV3_MIDRANGE
CPU_peripheralSpec33Reg=PE_SPEC_FEATURE_ICSV3_HIGHRANGE
CPU_peripheralSpec34Reg=PE_SPEC_FEATURE_EXTCLK
CPU_peripheralSpec35Reg=PE_SPEC_FEATURE_TPM1
CPU_peripheralSpec36Reg=PE_SPEC_FEATURE_TPM2
CPU_peripheralSpec37Reg=PE_SPEC_FEATURE_TPM3
CPU_peripheralSpec38Reg=PE_SPEC_FEATURE_HasDevice_ACMP1
CPU_peripheralSpec39Reg=PE_SPEC_FEATURE_HasDevice_ACMP2
CPU_peripheralSpec3Addr=1027
CPU_peripheralSpec3Reg=NVBACKKEY3
CPU_peripheralSpec40Reg=PE_SPEC_FEATURE_HasDevice_COPFree
CPU_peripheralSpec41Reg=PE_SPEC_FEATURE_HasDevice_COP
CPU_peripheralSpec42Reg=PE_SPEC_FEATURE_HasDevice_IntFLASH
CPU_peripheralSpec43Reg=PE_SPEC_FEATURE_HasDevice_IIC1
CPU_peripheralSpec44Reg=PE_SPEC_FEATURE_HasDevice_IIC2
CPU_peripheralSpec45Reg=PE_SPEC_FEATURE_HasDevice_IRQModule
CPU_peripheralSpec46Reg=PE_SPEC_FEATURE_HasDevice_KBI1
CPU_peripheralSpec47Reg=PE_SPEC_FEATURE_HasDevice_KBI2
CPU_peripheralSpec48Reg=PE_SPEC_FEATURE_HasDevice_PTA
CPU_peripheralSpec49Reg=PE_SPEC_FEATURE_HasDevice_PTB
CPU_peripheralSpec4Addr=1028
CPU_peripheralSpec4Reg=NVBACKKEY4
CPU_peripheralSpec50Reg=PE_SPEC_FEATURE_HasDevice_PTC
CPU_peripheralSpec51Reg=PE_SPEC_FEATURE_HasDevice_PTD
CPU_peripheralSpec52Reg=PE_SPEC_FEATURE_HasDevice_PTE
CPU_peripheralSpec53Reg=PE_SPEC_FEATURE_HasDevice_PTF
CPU_peripheralSpec54Reg=PE_SPEC_FEATURE_HasDevice_PTG
CPU_peripheralSpec55Reg=PE_SPEC_FEATURE_HasDevice_PTH
CPU_peripheralSpec56Reg=PE_SPEC_FEATURE_HasDevice_PTJ
CPU_peripheralSpec57Reg=PE_SPEC_FEATURE_HasDevice_RGPIO
CPU_peripheralSpec58Reg=PE_SPEC_FEATURE_HasDevice_RTCmod
CPU_peripheralSpec59Reg=PE_SPEC_FEATURE_HasDevice_RTC
CPU_peripheralSpec5Addr=1029
CPU_peripheralSpec5Reg=NVBACKKEY5
CPU_peripheralSpec60Reg=PE_SPEC_FEATURE_HasDevice_SCI1
CPU_peripheralSpec61Reg=PE_SPEC_FEATURE_HasDevice_SCI2
CPU_peripheralSpec62Reg=PE_SPEC_FEATURE_HasDevice_SPI1
CPU_peripheralSpec63Reg=PE_SPEC_FEATURE_HasDevice_SPI2
CPU_peripheralSpec64Reg=PE_SPEC_FEATURE_HasDevice_SIM
CPU_peripheralSpec65Reg=PE_SPEC_FEATURE_HasDevice_CPU
CPU_peripheralSpec66Reg=PE_SPEC_FEATURE_HasDevice_LVD
CPU_peripheralSpec67Reg=PE_SPEC_FEATURE_HasDevice_TPM1free
CPU_peripheralSpec68Reg=PE_SPEC_FEATURE_HasDevice_TPM1PP
CPU_peripheralSpec69Reg=PE_SPEC_FEATURE_HasDevice_TPM10
CPU_peripheralSpec6Addr=1030
CPU_peripheralSpec6Reg=NVBACKKEY6
CPU_peripheralSpec70Reg=PE_SPEC_FEATURE_HasDevice_TPM10PPG
CPU_peripheralSpec71Reg=PE_SPEC_FEATURE_HasDevice_TPM11
CPU_peripheralSpec72Reg=PE_SPEC_FEATURE_HasDevice_TPM11PPG
CPU_peripheralSpec73Reg=PE_SPEC_FEATURE_HasDevice_TPM12
CPU_peripheralSpec74Reg=PE_SPEC_FEATURE_HasDevice_TPM12PPG
CPU_peripheralSpec75Reg=PE_SPEC_FEATURE_HasDevice_TPM1
CPU_peripheralSpec76Reg=PE_SPEC_FEATURE_HasDevice_TPM1_PPG
CPU_peripheralSpec77Reg=PE_SPEC_FEATURE_HasDevice_TPM2free
CPU_peripheralSpec78Reg=PE_SPEC_FEATURE_HasDevice_TPM2PP
CPU_peripheralSpec79Reg=PE_SPEC_FEATURE_HasDevice_TPM20
CPU_peripheralSpec7Addr=1031
CPU_peripheralSpec7Reg=NVBACKKEY7
CPU_peripheralSpec80Reg=PE_SPEC_FEATURE_HasDevice_TPM20PPG
CPU_peripheralSpec81Reg=PE_SPEC_FEATURE_HasDevice_TPM21
CPU_peripheralSpec82Reg=PE_SPEC_FEATURE_HasDevice_TPM21PPG
CPU_peripheralSpec83Reg=PE_SPEC_FEATURE_HasDevice_TPM22
CPU_peripheralSpec84Reg=PE_SPEC_FEATURE_HasDevice_TPM22PPG
CPU_peripheralSpec85Reg=PE_SPEC_FEATURE_HasDevice_TPM2
CPU_peripheralSpec86Reg=PE_SPEC_FEATURE_HasDevice_TPM2_PPG
CPU_peripheralSpec87Reg=PE_SPEC_FEATURE_HasDevice_TPM3free
CPU_peripheralSpec88Reg=PE_SPEC_FEATURE_HasDevice_TPM3PP
CPU_peripheralSpec89Reg=PE_SPEC_FEATURE_HasDevice_TPM30
CPU_peripheralSpec8Addr=1037
CPU_peripheralSpec8Reg=NVPROT
CPU_peripheralSpec90Reg=PE_SPEC_FEATURE_HasDevice_TPM30PPG
CPU_peripheralSpec91Reg=PE_SPEC_FEATURE_HasDevice_TPM31
CPU_peripheralSpec92Reg=PE_SPEC_FEATURE_HasDevice_TPM31PPG
CPU_peripheralSpec93Reg=PE_SPEC_FEATURE_HasDevice_TPM32
CPU_peripheralSpec94Reg=PE_SPEC_FEATURE_HasDevice_TPM32PPG
CPU_peripheralSpec95Reg=PE_SPEC_FEATURE_HasDevice_TPM33
CPU_peripheralSpec96Reg=PE_SPEC_FEATURE_HasDevice_TPM33PPG
CPU_peripheralSpec97Reg=PE_SPEC_FEATURE_HasDevice_TPM34
CPU_peripheralSpec98Reg=PE_SPEC_FEATURE_HasDevice_TPM34PPG
CPU_peripheralSpec99Reg=PE_SPEC_FEATURE_HasDevice_TPM35
CPU_peripheralSpec9Addr=1039
CPU_peripheralSpec9Reg=NVOPT
ResetPinPortSpec0Addr=4294934528
ResetPinPortSpec0Reg=PERIPHERAL_BASE_ADDRESS
ResetPinPortSpec1Addr=4294940737
ResetPinPortSpec1Reg=PTASE
ResetPinPortSpec2Addr=4294940738
ResetPinPortSpec2Reg=PTADS
ResetPinSpec0Addr=4294940687
ResetPinSpec0Reg=SCGC2
ResetPinSpec1Reg=PE_SPEC_FEATURE_IRQ_EDGE
ResetPinSpec2Reg=PE_SPEC_FEATURE_IRQ_PULL
runSleep=no


GLOBAL SYMBOLS (alphabet order)
-------------------------------
ADCAsynchroClockAddr=4294934550
ADCAsynchroClockReg=ADCCFG
ADCBusClockAddr=4294934550
ADCBusClockReg=ADCCFG
ADCClkSelAddr=4294934550
ADCClkSelReg=ADCCFG
ADCConstPrescAddr=4294934550
ADCConstPrescReg=ADCCFG
ActiveConfigIdentifier=PEcfg_Release_51QE128CLH
ActiveConfiguration=Release_51QE128CLH
BDIVAddr=4294934585
BDIVReg=ICSC2
COPBusClkPrescAddr=4294940674
COPBusClkPrescReg=SOPT1
COPClkSelAddr=4294940675
COPClkSelReg=SOPT2
COPIntClkPrescAddr=4294940674
COPIntClkPrescReg=SOPT1
CPUDB_CW_MCU_ID=28672
CPUDB_CW_MCU_NAME=MCF51QE128
CPUDB_Flash_EraseSectorSize=1024
CPUDB_Flash_NumOfBlocks=1
CPUDB_LQFP64=-1
CPUDB_MCF51QE128=-1
CPUDB_PACKAGE=LQFP64
CPU_DB_version=3.00.080
CPUendian=big
CPUfamily=ColdFireV1
CPUproducer=Freescale
CPUrunSpeedModeNum=1
CPUsubFamily=MCF51QE
CPUtype=MCF51QE128_64
CPUvariant=MCF51QE128CLH
C_FAR_MOD=
C_GenMacros=yes
C_PECW_Linker=Embedded 68K Linker
C_PECW_Startup=Sources\startcf.c
ClientDir_Binary=F:\Proyectos\Robot-QE128\Sources\
ClientDir_Code=F:\Proyectos\Robot-QE128\Generated_Code\
ClientDir_PE=C:\Freescale\CW MCU v10.3\MCU\ProcessorExpert\
ClientDir_Project=F:\Proyectos\Robot-QE128\
CommentBrackets=/**/
Compiler=CodeWarriorColdFireV1
CompilerID=CodeWarrior ColdFireV1 C Compiler
DirRel_Binary=Sources\
DirRel_BinaryToEvents=
DirRel_Code=Generated_Code\
DirRel_Docs=Documentation\
DirRel_EventToBinary=
DirRel_Events=Sources\
DirRel_ProjectSettings=Project_Settings\
EclipseProjectName=Robot-QE128
FLLClkSelAddr=4294934587
FLLClkSelReg=ICSSC
FLL_32kHzAddr=4294934587
FLL_32kHzReg=ICSSC
FLL_DefaultAddr=4294934587
FLL_DefaultReg=ICSSC
HighClock_kHz=33
HighClock_kHz_real=32.768
HighSpeedClock=Internal Clock
High_TPM3=
IO_Map_WatchDogResetMethod=WriteAny
IO_Map_WatchDogServiceRegister=SRS
InterruptTableType=ROM
Language=ANSIC
Not_for_MPC512x=
Not_for_MPC5500_MCF=
O_PIB_full_Init=no
OnChipEEPROM=0
OnChipFLASH=131072
OnChipRAM=8192
PE_DEVELOPMENT=
PE_ECLIPSE=
PE_GENERATING=
PE_G_CRI_CPUENABLE_set0_TPM3SC=16
PE_G_CRI_CPUENABLE_set1_TPM3SC=8
PE_G_CRI_CPUINIT_set0_NVOPT=128
PE_G_CRI_CPUINIT_set0_NVPROT=0
PE_G_CRI_CPUINIT_set0_PTAD=0
PE_G_CRI_CPUINIT_set0_PTADD=12
PE_G_CRI_CPUINIT_set0_PTADS=32
PE_G_CRI_CPUINIT_set0_PTAPE=12
PE_G_CRI_CPUINIT_set0_PTASE=223
PE_G_CRI_CPUINIT_set0_PTBD=0
PE_G_CRI_CPUINIT_set0_PTBDD=1
PE_G_CRI_CPUINIT_set0_PTBDS=0
PE_G_CRI_CPUINIT_set0_PTBSE=255
PE_G_CRI_CPUINIT_set0_PTCD=10
PE_G_CRI_CPUINIT_set0_PTCDD=0
PE_G_CRI_CPUINIT_set0_PTCDS=0
PE_G_CRI_CPUINIT_set0_PTCPE=0
PE_G_CRI_CPUINIT_set0_PTCSE=255
PE_G_CRI_CPUINIT_set0_PTDDS=0
PE_G_CRI_CPUINIT_set0_PTDSE=255
PE_G_CRI_CPUINIT_set0_PTEDS=0
PE_G_CRI_CPUINIT_set0_PTESE=255
PE_G_CRI_CPUINIT_set0_PTFDS=0
PE_G_CRI_CPUINIT_set0_PTFSE=255
PE_G_CRI_CPUINIT_set0_PTGDD=0
PE_G_CRI_CPUINIT_set0_PTGDS=240
PE_G_CRI_CPUINIT_set0_PTGSE=15
PE_G_CRI_CPUINIT_set0_PTHDD=0
PE_G_CRI_CPUINIT_set0_PTHDS=60
PE_G_CRI_CPUINIT_set0_PTHSE=195
PE_G_CRI_CPUINIT_set0_PTJDD=0
PE_G_CRI_CPUINIT_set0_SOPT1=172
PE_G_CRI_CPUINIT_set0_SOPT2=0
PE_G_CRI_CPUINIT_set0_SPMSC1=231
PE_G_CRI_CPUINIT_set0_SPMSC2=253
PE_G_CRI_CPUINIT_set0_SPMSC3=56
PE_G_CRI_CPUINIT_set1_NVOPT=127
PE_G_CRI_CPUINIT_set1_NVPROT=255
PE_G_CRI_CPUINIT_set1_PTAD=0
PE_G_CRI_CPUINIT_set1_PTADD=0
PE_G_CRI_CPUINIT_set1_PTADS=223
PE_G_CRI_CPUINIT_set1_PTAPE=0
PE_G_CRI_CPUINIT_set1_PTASE=0
PE_G_CRI_CPUINIT_set1_PTBD=2
PE_G_CRI_CPUINIT_set1_PTBDD=2
PE_G_CRI_CPUINIT_set1_PTBDS=255
PE_G_CRI_CPUINIT_set1_PTBSE=0
PE_G_CRI_CPUINIT_set1_PTCD=5
PE_G_CRI_CPUINIT_set1_PTCDD=15
PE_G_CRI_CPUINIT_set1_PTCDS=255
PE_G_CRI_CPUINIT_set1_PTCPE=10
PE_G_CRI_CPUINIT_set1_PTCSE=0
PE_G_CRI_CPUINIT_set1_PTDDS=255
PE_G_CRI_CPUINIT_set1_PTDSE=0
PE_G_CRI_CPUINIT_set1_PTEDS=255
PE_G_CRI_CPUINIT_set1_PTESE=0
PE_G_CRI_CPUINIT_set1_PTFDS=255
PE_G_CRI_CPUINIT_set1_PTFSE=0
PE_G_CRI_CPUINIT_set1_PTGDD=240
PE_G_CRI_CPUINIT_set1_PTGDS=15
PE_G_CRI_CPUINIT_set1_PTGSE=0
PE_G_CRI_CPUINIT_set1_PTHDD=60
PE_G_CRI_CPUINIT_set1_PTHDS=195
PE_G_CRI_CPUINIT_set1_PTHSE=0
PE_G_CRI_CPUINIT_set1_PTJDD=255
PE_G_CRI_CPUINIT_set1_SOPT1=83
PE_G_CRI_CPUINIT_set1_SOPT2=0
PE_G_CRI_CPUINIT_set1_SPMSC1=24
PE_G_CRI_CPUINIT_set1_SPMSC2=2
PE_G_CRI_CPUINIT_set1_SPMSC3=0
PE_G_CRI_CPUSPEEDINIT_AFTER_HIGH_set0_TPM3SC=0
PE_G_CRI_CPUSPEEDINIT_AFTER_HIGH_set1_TPM3SC=8
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set0_TPM3CNTH=255
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set0_TPM3SC=255
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set1_TPM3CNTH=0
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set1_TPM3SC=0
PE_G_MisraCnfBackParams_0=
PE_G_MisraCnfBackParams_1=
PE_G_MisraCnfParams_0=
PE_G_MisraCnfParams_1=
PE_G_MisraRuleList_0=
PE_G_MisraRuleList_1=
PE_G_MisraStackIdx=-1
PE_ProductVersion=10.0
PEversion=05.03
PEversionDecimal=1283
ProcessorModule=Cpu
ProcessorName=Cpu
ProjectModule=ProcessorExpert
ProjectName=ProcessorExpert
RDIVAddr=4294934584
RDIVReg=ICSC1
RTCExtClkAddr=4294940720
RTCExtClkReg=RTCSC
RTCIntClkAddr=4294940720
RTCIntClkReg=RTCSC
RTCIntOscAddr=4294940720
RTCIntOscReg=RTCSC
ServerDir_PE=C:\Freescale\CW MCU v10.3\MCU\ProcessorExpert\
SetHighSpeedMode=Internal Clock
SupportedCPUfamily=
TimeStamp=2013-04-23, 06:54, # CodeGen: 67
VirtualTPM1PrescAddr=4294934592
VirtualTPM1PrescReg=TPM1SC
VirtualTPM2PrescAddr=4294934608
VirtualTPM2PrescReg=TPM2SC
VirtualTPM3PrescAddr=4294934624
VirtualTPM3PrescReg=TPM3SC
Xtal_kHz=0
Xtal_kHz_real=0
ivVsci1err=Terminal_InterruptError
ivVsci1rx=Terminal_InterruptRx
ivVsci1tx=Terminal_InterruptTx
ivVtpm1ch0=OSTimerTickISR
ivVtrap14=OSSyscallISR

 DEPRECATED GLOBAL SYMBOLS (alphabet order)
-------------------------------------------
ADCAsynchroClockAddr=null
ADCAsynchroClockReg=null
ADCBusClockAddr=null
ADCBusClockReg=null
ADCClkSelAddr=null
ADCClkSelReg=null
ADCConstPrescAddr=null
ADCConstPrescReg=null
ActiveConfigIdentifier=null
ActiveConfiguration=null
BDIVAddr=null
BDIVReg=null
COPBusClkPrescAddr=null
COPBusClkPrescReg=null
COPClkSelAddr=null
COPClkSelReg=null
COPIntClkPrescAddr=null
COPIntClkPrescReg=null
CPUDB_CW_MCU_ID=null
CPUDB_CW_MCU_NAME=null
CPUDB_Flash_EraseSectorSize=null
CPUDB_Flash_NumOfBlocks=null
CPUDB_LQFP64=null
CPUDB_MCF51QE128=null
CPUDB_PACKAGE=null
CPU_DB_version=null
CPUendian=null
CPUfamily=null
CPUproducer=null
CPUrunSpeedModeNum=null
CPUsubFamily=null
CPUtype=null
CPUvariant=null
C_FAR_MOD=null
C_GenMacros=null
C_PECW_Linker=null
C_PECW_Startup=null
ClientDir_Binary=null
ClientDir_Code=null
ClientDir_PE=null
ClientDir_Project=null
CommentBrackets=null
Compiler=null
CompilerID=null
DirRel_Binary=null
DirRel_BinaryToEvents=null
DirRel_Code=null
DirRel_Docs=null
DirRel_EventToBinary=null
DirRel_Events=null
DirRel_ProjectSettings=null
EclipseProjectName=null
FLLClkSelAddr=null
FLLClkSelReg=null
FLL_32kHzAddr=null
FLL_32kHzReg=null
FLL_DefaultAddr=null
FLL_DefaultReg=null
HighClock_kHz=null
HighClock_kHz_real=null
HighSpeedClock=null
High_TPM3=null
IO_Map_WatchDogResetMethod=null
IO_Map_WatchDogServiceRegister=null
InterruptTableType=null
Language=null
Not_for_MPC512x=null
Not_for_MPC5500_MCF=null
O_PIB_full_Init=null
OnChipEEPROM=null
OnChipFLASH=null
OnChipRAM=null
PE_DEVELOPMENT=null
PE_ECLIPSE=null
PE_GENERATING=null
PE_G_CRI_CPUENABLE_set0_TPM3SC=null
PE_G_CRI_CPUENABLE_set1_TPM3SC=null
PE_G_CRI_CPUINIT_set0_NVOPT=null
PE_G_CRI_CPUINIT_set0_NVPROT=null
PE_G_CRI_CPUINIT_set0_PTAD=null
PE_G_CRI_CPUINIT_set0_PTADD=null
PE_G_CRI_CPUINIT_set0_PTADS=null
PE_G_CRI_CPUINIT_set0_PTAPE=null
PE_G_CRI_CPUINIT_set0_PTASE=null
PE_G_CRI_CPUINIT_set0_PTBD=null
PE_G_CRI_CPUINIT_set0_PTBDD=null
PE_G_CRI_CPUINIT_set0_PTBDS=null
PE_G_CRI_CPUINIT_set0_PTBSE=null
PE_G_CRI_CPUINIT_set0_PTCD=null
PE_G_CRI_CPUINIT_set0_PTCDD=null
PE_G_CRI_CPUINIT_set0_PTCDS=null
PE_G_CRI_CPUINIT_set0_PTCPE=null
PE_G_CRI_CPUINIT_set0_PTCSE=null
PE_G_CRI_CPUINIT_set0_PTDDS=null
PE_G_CRI_CPUINIT_set0_PTDSE=null
PE_G_CRI_CPUINIT_set0_PTEDS=null
PE_G_CRI_CPUINIT_set0_PTESE=null
PE_G_CRI_CPUINIT_set0_PTFDS=null
PE_G_CRI_CPUINIT_set0_PTFSE=null
PE_G_CRI_CPUINIT_set0_PTGDD=null
PE_G_CRI_CPUINIT_set0_PTGDS=null
PE_G_CRI_CPUINIT_set0_PTGSE=null
PE_G_CRI_CPUINIT_set0_PTHDD=null
PE_G_CRI_CPUINIT_set0_PTHDS=null
PE_G_CRI_CPUINIT_set0_PTHSE=null
PE_G_CRI_CPUINIT_set0_PTJDD=null
PE_G_CRI_CPUINIT_set0_SOPT1=null
PE_G_CRI_CPUINIT_set0_SOPT2=null
PE_G_CRI_CPUINIT_set0_SPMSC1=null
PE_G_CRI_CPUINIT_set0_SPMSC2=null
PE_G_CRI_CPUINIT_set0_SPMSC3=null
PE_G_CRI_CPUINIT_set1_NVOPT=null
PE_G_CRI_CPUINIT_set1_NVPROT=null
PE_G_CRI_CPUINIT_set1_PTAD=null
PE_G_CRI_CPUINIT_set1_PTADD=null
PE_G_CRI_CPUINIT_set1_PTADS=null
PE_G_CRI_CPUINIT_set1_PTAPE=null
PE_G_CRI_CPUINIT_set1_PTASE=null
PE_G_CRI_CPUINIT_set1_PTBD=null
PE_G_CRI_CPUINIT_set1_PTBDD=null
PE_G_CRI_CPUINIT_set1_PTBDS=null
PE_G_CRI_CPUINIT_set1_PTBSE=null
PE_G_CRI_CPUINIT_set1_PTCD=null
PE_G_CRI_CPUINIT_set1_PTCDD=null
PE_G_CRI_CPUINIT_set1_PTCDS=null
PE_G_CRI_CPUINIT_set1_PTCPE=null
PE_G_CRI_CPUINIT_set1_PTCSE=null
PE_G_CRI_CPUINIT_set1_PTDDS=null
PE_G_CRI_CPUINIT_set1_PTDSE=null
PE_G_CRI_CPUINIT_set1_PTEDS=null
PE_G_CRI_CPUINIT_set1_PTESE=null
PE_G_CRI_CPUINIT_set1_PTFDS=null
PE_G_CRI_CPUINIT_set1_PTFSE=null
PE_G_CRI_CPUINIT_set1_PTGDD=null
PE_G_CRI_CPUINIT_set1_PTGDS=null
PE_G_CRI_CPUINIT_set1_PTGSE=null
PE_G_CRI_CPUINIT_set1_PTHDD=null
PE_G_CRI_CPUINIT_set1_PTHDS=null
PE_G_CRI_CPUINIT_set1_PTHSE=null
PE_G_CRI_CPUINIT_set1_PTJDD=null
PE_G_CRI_CPUINIT_set1_SOPT1=null
PE_G_CRI_CPUINIT_set1_SOPT2=null
PE_G_CRI_CPUINIT_set1_SPMSC1=null
PE_G_CRI_CPUINIT_set1_SPMSC2=null
PE_G_CRI_CPUINIT_set1_SPMSC3=null
PE_G_CRI_CPUSPEEDINIT_AFTER_HIGH_set0_TPM3SC=null
PE_G_CRI_CPUSPEEDINIT_AFTER_HIGH_set1_TPM3SC=null
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set0_TPM3CNTH=null
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set0_TPM3SC=null
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set1_TPM3CNTH=null
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_set1_TPM3SC=null
PE_G_MisraCnfBackParams_0=null
PE_G_MisraCnfBackParams_1=null
PE_G_MisraCnfParams_0=null
PE_G_MisraCnfParams_1=null
PE_G_MisraRuleList_0=null
PE_G_MisraRuleList_1=null
PE_G_MisraStackIdx=null
PE_ProductVersion=null
PEversion=null
PEversionDecimal=null
ProcessorModule=null
ProcessorName=null
ProjectModule=null
ProjectName=null
RDIVAddr=null
RDIVReg=null
RTCExtClkAddr=null
RTCExtClkReg=null
RTCIntClkAddr=null
RTCIntClkReg=null
RTCIntOscAddr=null
RTCIntOscReg=null
ServerDir_PE=null
SetHighSpeedMode=null
SupportedCPUfamily=null
TimeStamp=null
VirtualTPM1PrescAddr=null
VirtualTPM1PrescReg=null
VirtualTPM2PrescAddr=null
VirtualTPM2PrescReg=null
VirtualTPM3PrescAddr=null
VirtualTPM3PrescReg=null
Xtal_kHz=null
Xtal_kHz_real=null
ivVsci1err=null
ivVsci1rx=null
ivVsci1tx=null
ivVtpm1ch0=null
ivVtrap14=null

 GLOBAL LISTS (alphabet order)
-------------------------------------------
ADCAsynchroClock=[1|undef|undef]
ADCAsynchroClock_Setting=[1|undef|undef]
ADCBusClock=[1|undef|undef]
ADCBusClock_Setting=[1|undef|undef]
ADCClkSel=[1|undef|undef]
ADCClkSel_Setting=[ADCBusClock|undef|undef]
ADCConstPresc=[20|undef|undef]
ADCConstPresc_Setting=[20|undef|undef]
BDIV=[1|undef|undef]
BDIV_Setting=[1|undef|undef]
CLKClkSel=[1|undef|undef]
CLKClkSel_Setting=[FLLClkSel|undef|undef]
COPBusClkPresc=[8192|undef|undef]
COPBusClkPresc_Setting=[8192|undef|undef]
COPClkSel=[1|undef|undef]
COPClkSel_Setting=[COPIntClkPresc|undef|undef]
COPIntClkPresc=[32|undef|undef]
COPIntClkPresc_Setting=[32|undef|undef]
CPUsystem_ticks=[0|undef|undef]
C_PECW_LibPath=[{Project}|{Project}bin|{Project}prm|{Project}Sources|{Project}cmd|{Project}Generated_Code\|{Project}Documentation\|{Compiler}ColdFire_Support\Derivatives\device\src]
C_PECW_LibPaths=[{Compiler}lib\hc08c\lib|{Compiler}lib\hc08c\src|{Compiler}lib\hc08c\include|{Compiler}lib\hc08c\device\src|{Compiler}lib\rs08c\lib|{Compiler}lib\rs08c\src|{Project}|{Project}bin|{Project}prm|{Project}cmd|{Project}Generated_Code\|{Project}Documentation\|{Project}Sources|{Compiler}ColdFire_Support\Derivatives\device\src]
C_PECW_SystemPath=[{Compiler}ColdFire_Support\Derivatives\device\include|{Compiler}ColdFire_Support\Derivatives\device\asm_include|{Compiler}ColdFire_Support\ewl\*|{Compiler}ColdFire_Support\hcs08_compatibility]
C_PECW_SystemPaths=[{Compiler}ColdFire_Support\Derivatives\device\include|{Compiler}ColdFire_Support\Derivatives\device\asm_include|{Compiler}ColdFire_Support\ewl\*|{Compiler}ColdFire_Support\hcs08_compatibility|{Compiler}lib\hc08c\include|{Compiler}lib\hc08c\device\include|{Compiler}lib\hc08c\device\asm_include|{Compiler}lib\rs08c\include]
EventModuleList=[Events]
FLLClkSel=[1|undef|undef]
FLLClkSel_Setting=[FLL_Default|undef|undef]
FLL_32kHz=[608|undef|undef]
FLL_32kHz_Setting=[608|undef|undef]
FLL_Default=[1536|undef|undef]
FLL_Default_Setting=[1536|undef|undef]
IREFSClkSel=[1|undef|undef]
IREFSClkSel_Setting=[IREFSIntClk|undef|undef]
IncludeSharedModules=[PE_Types|PE_Error|PE_Const|IO_Map|PE_Timer]
InstructionClock=[25.165824|undef|undef]
ModuleList=[IV1|IV2|MotorD1|MotorD2|MotorI1|MotorI2|Terminal|Encoders]
PE_G_4PEx_ToolChain_Compiler_SearchUserPaths=["${ProjDirPath}/Sources"|"${ProjDirPath}/Generated_Code"]
PE_G_CRI_CPUENABLE_RegList8=[TPM3SC]
PE_G_CRI_CPUENABLE_inited=[TPM3SC]
PE_G_CRI_CPUINIT_RegList8=[PTCDD|PTCD|PTCPE|PTBDD|PTBD|PTAD|PTAPE|PTADD|PTASE|PTBSE|PTCSE|PTDSE|PTESE|PTFSE|PTGSE|PTHSE|PTADS|PTBDS|PTCDS|PTDDS|PTEDS|PTFDS|PTGDS|PTHDS|PTGDD|PTHDD|PTJDD|NVPROT|NVOPT|SOPT1|SPMSC1|SPMSC2|SPMSC3]
PE_G_CRI_CPUINIT_inited=[SOPT1|SPMSC1|SPMSC2|SPMSC3|PTCDD|PTCD|PTCPE|PTBDD|PTBD|PTAD|PTAPE|PTADD|PTASE|PTBSE|PTCSE|PTDSE|PTESE|PTFSE|PTGSE|PTHSE|PTADS|PTBDS|PTCDS|PTDDS|PTEDS|PTFDS|PTGDS|PTHDS|PTGDD|PTHDD|PTJDD]
PE_G_CRI_CPUINIT_prev_PTADD=[PTAD]
PE_G_CRI_CPUINIT_prev_PTBDD=[ PTBD]
PE_G_CRI_CPUINIT_prev_PTCDD=[PTCD|PTCD]
PE_G_CRI_CPUINIT_prev_PTGDD=[PTGD]
PE_G_CRI_CPUINIT_prev_PTHDD=[PTHD]
PE_G_CRI_CPUINIT_prev_PTJDD=[PTJD]
PE_G_CRI_CPUSPEEDINIT_AFTER_HIGH_RegList8=[TPM3SC]
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_RegList8=[TPM3SC|TPM3CNTH]
PE_G_CRI_CPUSPEEDINIT_BEFORE_HIGH_prev_TPM3CNTH=[TPM3SC|TPM3SC]
PE_Timer=[LngMul|LngHi3|LngHi2|$]
ProjectSharedModulesC=[IO_Map|PE_Timer|Vectors]
RDIV=[undef|undef|undef]
RDIV_Setting=[undef|undef|undef]
RTCClkSel=[1|undef|undef]
RTCClkSel_Setting=[RTCIntClk|undef|undef]
RTCExtClk=[undef|undef|undef]
RTCExtClk_Setting=[undef|undef|undef]
RTCIntClk=[1|undef|undef]
RTCIntClk_Setting=[1|undef|undef]
RTCIntOsc=[1|undef|undef]
RTCIntOsc_Setting=[1|undef|undef]
SharedModules=[ColdFireV1\PE_Types.drv|ColdFireV1\PE_Error.drv|ColdFireV1\PE_Const.drv|ColdFireV1\IO_Map.drv|HCS08\PE_Timer.drv]
SpeedModeInitAfterNames=[AFTER_HIGH|AFTER_LOW|AFTER_SLOW]
SpeedModeInitBeforeNames=[BEFORE_HIGH|BEFORE_LOW|BEFORE_SLOW]
SpeedModeNames=[High|Low|Slow]
SystemPrescaler=[1|undef|undef]
SystemPrescaler_Setting=[1|undef|undef]
TPM1ClkSel=[1|undef|undef]
TPM1ClkSel_Setting=[TPM1BusClk|undef|undef]
TPM2ClkSel=[1|undef|undef]
TPM2ClkSel_Setting=[TPM2BusClk|undef|undef]
TPM3ClkSel=[1|undef|undef]
TPM3ClkSel_Setting=[TPM3BusClk|undef|undef]
VirtualTPM1Presc=[1|undef|undef]
VirtualTPM1Presc_Setting=[1|undef|undef]
VirtualTPM2Presc=[1|undef|undef]
VirtualTPM2Presc_Setting=[1|undef|undef]
VirtualTPM3Presc=[1|undef|undef]
VirtualTPM3Presc_Setting=[1|undef|undef]

{{DEVELOPMENT}} --------(((DEBUGINFO)))--------.{{DEVELOPMENT}} 






